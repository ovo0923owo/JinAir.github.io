<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>佳仪的笔记(1-6)</title>
    <url>/2021/09/09/%E4%BD%B3%E4%BB%AA%E7%9A%84%E7%AC%94%E8%AE%B0(1-6)/</url>
    <content><![CDATA[<h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><h2 id="一般C语言程序的结构"><a href="#一般C语言程序的结构" class="headerlink" title="一般C语言程序的结构"></a>一般C语言程序的结构</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//  整数 int </span></span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">10</span>;	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//  浮点数 double精度高 float 精度低 </span></span><br><span class="line">	<span class="keyword">double</span> b = <span class="number">1.5</span>;</span><br><span class="line">	<span class="keyword">float</span> c = <span class="number">2.42</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//  字符 char</span></span><br><span class="line">	<span class="keyword">char</span> d = <span class="string">&#x27;&gt;&#x27;</span>; <span class="comment">//  变量d表示字符&gt;</span></span><br><span class="line">	</span><br><span class="line">    	<span class="comment">// 标识符: 字母+数字+下划线_ 只能由字母或下划线_开头</span></span><br><span class="line">	<span class="keyword">int</span> lujiayi = <span class="number">18</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//  printf(&quot;里面的打印到屏幕上&quot;); </span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//     \n   换行 </span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// %d  整数int</span></span><br><span class="line">	<span class="comment">// %f  小数float  %lf double</span></span><br><span class="line">	<span class="comment">// %c  字符char </span></span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d     \n&quot;</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lf  %f   \n&quot;</span>, b, c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%c     \n&quot;</span>, d);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// % 模运算(取余数) </span></span><br><span class="line">	<span class="keyword">int</span> t = <span class="number">25</span> % <span class="number">7</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;t = %d     \n&quot;</span>, t); </span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 如果两个操作数中有一个是double型</span></span><br><span class="line"><span class="comment">	另一个操作数就会转换为double型 */</span> </span><br><span class="line">	<span class="keyword">double</span> f = <span class="number">50</span>;</span><br><span class="line">	<span class="keyword">double</span> c;</span><br><span class="line">	<span class="comment">//c = 5.0 / 9.0;</span></span><br><span class="line">	c = <span class="number">5</span> / <span class="number">9.0</span> * (f - <span class="number">32</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c = %lf    \n&quot;</span>, c);</span><br><span class="line">    </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h1><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>二进制：满二进一<br>1为真 0为假</p>
<blockquote>
<p>非!<br>☸!n (n不等于0) = 0<br>☸!0 = 1</p>
</blockquote>
<p>位运算：<br>(一)与&amp;        </p>
<blockquote>
<p>按位与<br>☸1 &amp; 1 = 1<br> ☸1 &amp; 0 = 0<br> ☸0 &amp; 0 = 0</p>
</blockquote>
<p>(二)或|          </p>
<blockquote>
<p>按位或<br> ☸1 | 1 = 1<br>  ☸1 | 0 = 1<br>  ☸0 | 0 = 0</p>
</blockquote>
<p>(三)异或^     </p>
<blockquote>
<p>按位异或<br>☸1 ^ 1 = 0<br>☸1 ^ 0 = 1<br>☸0 ^ 0 = 0</p>
</blockquote>
<p>(四)非~         </p>
<blockquote>
<p>按位取反 ~n = -n - 1</p>
</blockquote>
<p>(五)左移&lt;&lt;   </p>
<blockquote>
<p>左边丢失右边补0 左移1位 等价于 *2</p>
</blockquote>
<p>(六)右移&gt;&gt;</p>
<blockquote>
<p>右边丢失左边补0 右移1位 等价于 /2</p>
</blockquote>
<hr>
<h1 id="第三天"><a href="#第三天" class="headerlink" title="第三天"></a>第三天</h1><h2 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h2><p>ASCII码：在计算机中每一个拉丁文字字母用一个0～127的数字表示<br>特点：</p>
<blockquote>
<p>0-9 连续（48 ~ 57）<br>a-z连续（97 ~ 122）<br>A-Z连续（65 ~ 90）</p>
</blockquote>
<p>转义字符：<br>‘\n’ 换行<br>‘&#39;‘ 单引号<br>‘\‘ 反斜杠<br>‘&quot;‘双引号<br>printf(“%%”) 输出%</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> x = <span class="string">&#x27;m&#x27;</span>; <span class="comment">//字符型变量d的值为字符&#x27;A&#x27;</span></span><br><span class="line">	<span class="keyword">char</span> y = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">	<span class="keyword">int</span> d = y - x;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d    \n&quot;</span>, d);	<span class="comment">//%d输出字符的ASCII码: m = 109 F = 70 结果-39</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="第四天"><a href="#第四天" class="headerlink" title="第四天"></a>第四天</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//int a = 0;</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;输入a的值:&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//scanf(&quot;&quot;,&amp;); 用来输入 </span></span><br><span class="line">	<span class="comment">//不要在scanf的格式字符串中加入\n </span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);	<span class="comment">//&amp;必须加 </span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">double</span> b = <span class="number">0.0</span>;</span><br><span class="line">	</span><br><span class="line"> 	<span class="built_in">scanf</span>(<span class="string">&quot;%d%lf&quot;</span>,&amp;a, &amp;b); </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">&quot;a = %d, b = %lf&quot;</span>, a, b); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="练习：温度转换"><a href="#练习：温度转换" class="headerlink" title="练习：温度转换"></a>练习：温度转换</h2><p>编写一个程序，用于预测冰箱断电后经过时间t（以小时为单位，可以是小数）后的温度T<br>已知计算公式为 T = 4 * T * T / (t + 2) - 2<br>输入两个整数h和m分别表示断电后的小时和分钟<br>输出冰箱断电后经过时间t（以小时为单位）后的温度T，保留两位小数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> h = <span class="number">0</span>;	<span class="comment">//小时 </span></span><br><span class="line">	<span class="keyword">int</span> m = <span class="number">0</span>;	<span class="comment">//分钟 </span></span><br><span class="line">	<span class="comment">//输入两个整数h和m </span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;h ,&amp;m);</span><br><span class="line">	<span class="comment">//经过时间t小时后 </span></span><br><span class="line">	<span class="keyword">double</span> t = h + (m / <span class="number">60.0</span>);</span><br><span class="line"> 	<span class="keyword">double</span> T = (<span class="number">4.0</span> * t * t) / (t + <span class="number">2</span>) - <span class="number">20</span>;</span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">&quot;冰箱断电后经过时间t后的温度T=%.2lf\n&quot;</span>, T);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>等于 ==<br>不等于 !=<br>并且 &amp;&amp;<br>或者 || </p>
</blockquote>
<h2 id="特殊运算符"><a href="#特殊运算符" class="headerlink" title="特殊运算符"></a>特殊运算符</h2><p><strong>三目运算符</strong><br>(表达式1)?(表达式2):(表达式3)<br>如果表达式1为真就计算表达式2，表达式1为假就计算表达式3，并作为整个表达式的值</p>
<p><strong>单目运算符</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//--同理</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">5</span>;</span><br><span class="line">	<span class="comment">//x++;	//在原来的基础上加1 </span></span><br><span class="line">	<span class="comment">//++x;	//在原来的基础上加1</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;x = %d\n&quot;</span>, x++); 	<span class="comment">//x++最后加一 </span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;x = %d\n&quot;</span>, x);		<span class="comment">//++x最先加一 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>判断闰年：年份能够被400整除，或者年份能够被4整除并且不能被100整除</p>
<blockquote>
<p>year % 400 == 0 || (year % 4 == 0 &amp;&amp; year % 100 != 0)</p>
</blockquote>
<hr>
<h1 id="第五天"><a href="#第五天" class="headerlink" title="第五天"></a>第五天</h1><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>三种结构</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">5</span>;</span><br><span class="line">    <span class="comment">//if - else 结构</span></span><br><span class="line">	<span class="keyword">if</span>(x &lt; <span class="number">4</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;成立\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;不成立\n&quot;</span>); </span><br><span class="line">	&#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//if - else if 结构</span></span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">4</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;4\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">5</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;5\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//if - else if - else 结构</span></span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">4</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;4\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;都不是\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h3><blockquote>
<p>编写程序，接受用户输入的整数，如果该整数为奇数则将其乘 3 加 1 后输出，偶数直接输出</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, result;</span><br><span class="line">    <span class="comment">/* 输入部分 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The program gets a number.\nIf it is an even, output it directly, \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;otherwise multiply it by 3 then plus 1.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The number: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d &quot;</span>, &amp;a);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 计算部分 */</span></span><br><span class="line">    result = a;</span><br><span class="line">    <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        result = a * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 输出部分 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The result is %d.\n&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h3><blockquote>
<p>编写程序，接受用户输入的整数，如果该整数为奇数则将其乘 3 加 1 后输出，偶数除以 2 后输出</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, result;</span><br><span class="line">    <span class="comment">/* 输入部分 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The program gets a number.\nIf it is an even, divide it by 2, \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;otherwise multiply it by 3 then plus 1.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The number: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d &quot;</span>, &amp;a);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 计算部分 */</span></span><br><span class="line">    <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        result = a * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> result = a / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 输出部分 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The result is %d.\n&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h3><blockquote>
<p>从键盘输入三个整数，计算其中的最大值并将其输出</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c, max;</span><br><span class="line">    <span class="comment">/* 输入部分 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;该程序从键盘获取3个整数，输出最大值。 \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入3个数: \n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 计算部分 */</span></span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">        max = a;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        max = b;</span><br><span class="line">    <span class="keyword">if</span> (c &gt; max) max = c;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 输出部分 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大值为： %d.\n&quot;</span>, max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p>==break: 从switch中跳出 截断==</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; 	</span><br><span class="line">	<span class="keyword">int</span> day;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;day);</span><br><span class="line">	<span class="comment">//整型 </span></span><br><span class="line">	<span class="keyword">switch</span> (day)	<span class="comment">//选择 入口 </span></span><br><span class="line">	&#123; 	</span><br><span class="line">		<span class="keyword">case</span> <span class="number">0</span>: <span class="built_in">printf</span>( <span class="string">&quot;Sunday &quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>: <span class="built_in">printf</span>( <span class="string">&quot;Monday&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">printf</span>( <span class="string">&quot;Tuesday&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>: <span class="built_in">printf</span>( <span class="string">&quot;Wednesday&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>: <span class="built_in">printf</span>( <span class="string">&quot;Thursday&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>: <span class="built_in">printf</span>( <span class="string">&quot;Friday&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>: <span class="built_in">printf</span>( <span class="string">&quot;Saturday&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//默认入口 其他入口都不能进入时 </span></span><br><span class="line">		<span class="keyword">default</span>: <span class="built_in">printf</span>( <span class="string">&quot;Input error&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> switch计算过程</p>
<blockquote>
<p>❁先计算整型表达式的值<br>❁依次与常数表达式比较<br>❁若相同则执行该分支（子句）<br>❁否则转向 default 分支<br>❁最后退出 switch语句</p>
</blockquote>
<p>==特别说明==</p>
<blockquote>
<p>switch 后面的表达式必须为整型、字符型，case 后面必须为常量表达式，且各个case 值必须不同，case分支中的语句可以有多条，不需要花括号</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//字符型</span></span><br><span class="line">	<span class="keyword">switch</span> (<span class="string">&#x27;&gt;&#x27;</span>)	</span><br><span class="line">	&#123; 	</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;&gt;&#x27;</span>: </span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &gt; &quot;</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;&lt;&#x27;</span>: </span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &lt; &quot;</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>: <span class="built_in">printf</span>(<span class="string">&quot;啥也不是&quot;</span>); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="第六天"><a href="#第六天" class="headerlink" title="第六天"></a>第六天</h1><p>二进制最高位为符号位：0表示正 1表示负<br>正数：原码反码补码相同<br>负数：最高位符号位为1 反码为原码除符号位按位取反 补码为反码加1</p>
<p><strong>举个栗子</strong></p>
<blockquote>
<p>+13的8位二进制表示为 0000 1101<br>原码：0000 1101<br>反码：0000 1101<br>补码：0000 1101</p>
</blockquote>
<blockquote>
<p>-14的8位二进制表示为 1000 1110<br>原码：1000 1110<br>反码：1111 0001<br>补码：1111 0010</p>
</blockquote>
<h2 id="有符号整型与无符号整型的区别"><a href="#有符号整型与无符号整型的区别" class="headerlink" title="有符号整型与无符号整型的区别"></a>有符号整型与无符号整型的区别</h2><p>以2字节 int 与 unsigned int 为例<br>1字节(Byte) = 8 位(Bit)<br>这里假设int在电脑内存上占用的连续空间为2字节(16位)<br>==在计算机系统中一律用<strong>补码</strong>存数据==</p>
<blockquote>
<p>0000 0000 0000 0000 (共16位 = 2字节)</p>
</blockquote>
<p>由于 int 是有符号整型，所以最高位为符号位</p>
<blockquote>
<p>+13：0000 0000 0000 1101</p>
<p>-14：1000 0000 0000 1101</p>
</blockquote>
<p>由于16位中最高位(最左)用来表示符号(0为正1为负)，所以只有15位能够用来表示数的大小 位权从右到左依次为2^0 ~ 2^14，当所有位都为1的时候表示的数最大</p>
<blockquote>
<p>(补码) 0111 1111 1111 1111 = 2^0 + .. + 2^14 = 2^15-1</p>
</blockquote>
<p>同理 </p>
<blockquote>
<p>(补码) 1000 0000 0000 0000 = -2^15</p>
</blockquote>
<p>-2^15的补码为1000 0000 0000 0000。如果按正常的补码运算，转换为原码为0000 0000 0000 0000。其实是0，但因为+0和-0的补码都是0000 0000 0000 0000，就多出了一个补码，所以人为规定1000 0000 0000 0000为-32768</p>
<h2 id="常用变量类型取值范围"><a href="#常用变量类型取值范围" class="headerlink" title="常用变量类型取值范围"></a>常用变量类型取值范围</h2><blockquote>
<p>int(4字节)：-2^31 ~ 2^31-1<br>long long(8字节)：-2^63 ~ 2^63 - 1</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>C语言学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>有效的括号字符串</title>
    <url>/2021/09/12/%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<p>-动态规划-<br>-栈-<br>-贪心-</p>
<p><a href="https://leetcode-cn.com/problems/valid-parenthesis-string/">传送门</a></p>
<p><img src="https://img-blog.csdnimg.cn/da943bd7628e4477a0907baeee62d415.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>题解：</p>
<blockquote>
<p>方法一：动态规划</p>
</blockquote>
<p>要判断 s 是否为有效的括号字符串，需要判断 s 的首尾字符以及 s 的中间字符是否符合有效的括号字符串的要求。可以使用动态规划求解。</p>
<p>假设字符串 s 的长度为 n。定义 dp[i][j] 表示字符串 s 从下标 i 到 j 的子串是否为有效的括号字符串，其中 0 &lt;= i &lt;= j &lt; n</p>
<p>动态规划的边界情况是子串的长度为 1 或 2 的情况：</p>
<ul>
<li>当子串的长度为 1 时，只有当该字符是 * 时，才是有效的括号字符串，此时子串可以看成空字符串</li>
<li>当子串的长度为 2 时，只有当两个字符是 () ， (* ， *) ， ** 中的一种情况时，才是有效的括号字符串，此时子串可以看成 ()</li>
</ul>
<p>当子串的长度大于 2 时，需要根据子串的首尾字符以及中间的字符判断子串是否为有效的括号字符串。字符串 s 从下标 i 到 j 的子串的长度大于 2 等价于 j - i &gt;= 2，此时 dp[i][j] 的计算如下，只要满足以下一个条件就有 dp[i][j] = true：</p>
<ul>
<li>如果 s[i] 和 s[j] 分别为左括号和右括号，或者为 * ，则当 dp[i + 1][j - 1] = true 时，dp[i][j] = true，此时 s[i] 和 s[j]可以分别看成左括号和右括号</li>
<li>如果存在 i &lt;= k &lt; j 使得 dp[i][k] 和 dp[k + 1][j] 都为 true，则 dp[i][j] = true，因为字符串 s 的下标范围 [i, k] 和 [k+1, j] 的子串分别为有效的括号字符串，将两个子串拼接之后的子串也为有效的括号字符串，对应下标范围 [i, j]</li>
</ul>
<p>上述计算过程为从较短的子串的结果得到较长的子串的结果，因此需要注意动态规划的计算顺序。最终答案为 dp[0][n − 1]</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkValidString</span><span class="params">(string s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt; dp = vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt;(n,vector&lt;<span class="keyword">bool</span>&gt;(n,<span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">&#x27;*&#x27;</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][i] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c1 = s[i - <span class="number">1</span>]; </span><br><span class="line">            <span class="keyword">char</span> c2 = s[i];</span><br><span class="line">            dp[i - <span class="number">1</span>][i] = (c1 == <span class="string">&#x27;(&#x27;</span> || c1 == <span class="string">&#x27;*&#x27;</span>) &amp;&amp; (c2 == <span class="string">&#x27;)&#x27;</span> || c2 == <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">3</span>; i &gt;= <span class="number">0</span>; i--) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c1 = s[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">2</span>; j &lt; n; j++) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">char</span> c2 = s[j];</span><br><span class="line">                <span class="keyword">if</span> ((c1 == <span class="string">&#x27;(&#x27;</span> || c1 == <span class="string">&#x27;*&#x27;</span>) &amp;&amp; (c2 == <span class="string">&#x27;)&#x27;</span> || c2 == <span class="string">&#x27;*&#x27;</span>)) &#123;</span><br><span class="line">                    dp[i][j] = dp[i + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt; j &amp;&amp; !dp[i][j]; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    dp[i][j] = dp[i][k] &amp;&amp; dp[k + <span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>方法二：栈</p>
</blockquote>
<p>括号匹配的问题可以用栈求解。</p>
<p>如果字符串中没有星号，则只需要一个栈存储左括号，在从左到右遍历字符串的过程中检查括号是否匹配。</p>
<p>在有星号的情况下，需要两个栈分别存储左括号和星号。从左到右遍历字符串，进行如下操作。</p>
<ul>
<li>如果遇到左括号，则将当前下标存入左括号栈。</li>
<li>如果遇到星号，则将当前下标存入星号栈。</li>
<li>如果遇到右括号，则需要有一个左括号或星号和右括号匹配，由于星号也可以看成右括号或者空字符串，因此当前的右括号应优先和左括号匹配，没有左括号时和星号匹配：<br>(一)如果左括号栈不为空，则从左括号栈弹出栈顶元素<br>(二)如果左括号栈为空且星号栈不为空，则从星号栈弹出栈顶元素<br>(三)如果左括号栈和星号栈都为空，则没有字符可以和当前的右括号匹配，返回 false</li>
</ul>
<p>遍历结束之后，左括号栈和星号栈可能还有元素。为了将每个左括号匹配，需要将星号看成右括号，且每个左括号必须出现在其匹配的星号之前。当两个栈都不为空时，每次从左括号栈和星号栈分别弹出栈顶元素，对应左括号下标和星号下标，判断是否可以匹配，匹配的条件是左括号下标小于星号下标，如果左括号下标大于星号下标则返回 false</p>
<p>最终判断左括号栈是否为空。如果左括号栈为空，则左括号全部匹配完毕，剩下的星号都可以看成空字符串，此时 s 是有效的括号字符串，返回 true。如果左括号栈不为空，则还有左括号无法匹配，此时 s 不是有效的括号字符串，返回 false</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkValidString</span><span class="params">(string s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; leftStack;</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; asteriskStack;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s[i];</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;(&#x27;</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                leftStack.<span class="built_in">push</span>(i);</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                asteriskStack.<span class="built_in">push</span>(i);</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!leftStack.<span class="built_in">empty</span>()) </span><br><span class="line">                &#123;</span><br><span class="line">                    leftStack.<span class="built_in">pop</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!asteriskStack.<span class="built_in">empty</span>()) </span><br><span class="line">                &#123;</span><br><span class="line">                    asteriskStack.<span class="built_in">pop</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!leftStack.<span class="built_in">empty</span>() &amp;&amp; !asteriskStack.<span class="built_in">empty</span>()) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> leftIndex = leftStack.<span class="built_in">top</span>();</span><br><span class="line">            leftStack.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">int</span> asteriskIndex = asteriskStack.<span class="built_in">top</span>();</span><br><span class="line">            asteriskStack.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (leftIndex &gt; asteriskIndex) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> leftStack.<span class="built_in">empty</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkValidString</span><span class="params">(string s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        deque&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;&gt; left, right;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!left.<span class="built_in">empty</span>())</span><br><span class="line">                    left.<span class="built_in">pop_back</span>();</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!right.<span class="built_in">empty</span>())</span><br><span class="line">                    right.<span class="built_in">pop_back</span>();</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                left.<span class="built_in">emplace_back</span>(s[i], i);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                right.<span class="built_in">emplace_back</span>(s[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!left.<span class="built_in">empty</span>() &amp;&amp; !right.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (left.<span class="built_in">back</span>().second &gt; right.<span class="built_in">back</span>().second)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            left.<span class="built_in">pop_back</span>();</span><br><span class="line">            right.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left.<span class="built_in">empty</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>方法三：贪心</p>
</blockquote>
<p>从左到右遍历字符串，遍历过程中，未匹配的左括号数量可能会出现如下变化：</p>
<ul>
<li>如果遇到左括号，则未匹配的左括号数量加 1</li>
<li>如果遇到右括号，则需要有一个左括号和右括号匹配，因此未匹配的左括号数量减 1</li>
<li>如果遇到星号，由于星号可以看成左括号、右括号或空字符串，因此未匹配的左括号数量可能加 1、减 1 或不变</li>
</ul>
<p>基于上述结论，可以在遍历过程中维护未匹配的左括号数量可能的最小值和最大值，根据遍历到的字符更新最小值和最大值：</p>
<ul>
<li>如果遇到左括号，则将最小值和最大值分别加 1</li>
<li>如果遇到右括号，则将最小值和最大值分别减 1</li>
<li>如果遇到星号，则将最小值减 1，将最大值加 1</li>
</ul>
<p>任何情况下，未匹配的左括号数量必须非负，因此当最大值变成负数时，说明没有左括号可以和右括号匹配，返回 false</p>
<p>当最小值为 0 时，不应将最小值继续减少，以确保最小值非负</p>
<p>遍历结束时，所有的左括号都应和右括号匹配，因此只有当最小值为 0 时，字符串 s 才是有效的括号字符串</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkValidString</span><span class="params">(string s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> minCount = <span class="number">0</span>, maxCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s[i];</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;(&#x27;</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                minCount++;</span><br><span class="line">                maxCount++;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;)&#x27;</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                minCount = <span class="built_in">max</span>(minCount - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">                maxCount--;</span><br><span class="line">                <span class="keyword">if</span> (maxCount &lt; <span class="number">0</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                minCount = <span class="built_in">max</span>(minCount - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">                maxCount++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> minCount == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>刷题日记</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
        <tag>栈</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>佳仪的笔记(7)</title>
    <url>/2021/09/10/%E4%BD%B3%E4%BB%AA%E7%9A%84%E7%AC%94%E8%AE%B0(7)/</url>
    <content><![CDATA[<h1 id="第七天"><a href="#第七天" class="headerlink" title="第七天"></a>第七天</h1><h2 id="运算符号缩写"><a href="#运算符号缩写" class="headerlink" title="运算符号缩写"></a>运算符号缩写</h2><p>x = x + 1 缩写为 x += 1<br>x = x - 2 缩写为 x -= 2<br>x = x * 3 缩写为 x *= 3<br>x = x / 4 缩写为 x /= 4<br>x = x % 5 缩写为 x %= 5<br>&amp;、|、^、&lt;&lt;、&gt;&gt;符号同理</p>
<h2 id="位运算专题"><a href="#位运算专题" class="headerlink" title="位运算专题"></a>位运算专题</h2><p>位运算的效率<strong>远高于</strong>常规运算(四则运算等)</p>
<h3 id="判断奇偶数"><a href="#判断奇偶数" class="headerlink" title="判断奇偶数"></a>判断奇偶数</h3><blockquote>
<p>一般解法</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// n 是个偶数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( n % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// n 是个奇数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用 &amp;</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// == 的优先级高于 &amp;，所以要把 n &amp; 1 加上括号</span></span><br><span class="line"><span class="keyword">if</span>((n &amp; <span class="number">1</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// n 是个偶数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((n &amp; <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// n 是个奇数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原理：</p>
<blockquote>
<p>奇数的二进制最后一位数为 1<br>偶数的二进制最后一位数为 0</p>
</blockquote>
<p>举个栗子：<br>5 的二进制表示为 0101<br>12的二进制表示为 1100</p>
<p>5 &amp; 1 = 0101 &amp; 1 = 0101 &amp; 0001 = 0001 = 1<br>12 &amp; 1 = 1100 &amp; 1 = 1100 &amp; 0001 = 0000 = 0</p>
<h3 id="交换两个变量的值"><a href="#交换两个变量的值" class="headerlink" title="交换两个变量的值"></a>交换两个变量的值</h3><p>x 和 y 的值互换</p>
<blockquote>
<p>一般解法</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> tmp = x;</span><br><span class="line">x = y;</span><br><span class="line">y = tmp;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用 ^</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">x = x ^ y	<span class="comment">//(1)</span></span><br><span class="line">y = x ^ y	<span class="comment">//(2)</span></span><br><span class="line">x = x ^ y 	<span class="comment">//(3)</span></span><br></pre></td></tr></table></figure>
<p>原理：<br>其实现基于异或运算的如下性质：</p>
<blockquote>
<p>🍤可交换性：a ^ b = b ^ a<br>🍤可结合性：a ^ b ^ c = (a ^ b) ^ c = a ^ (b ^ c)<br>🍤自身进行异或运算值为零：a ^ a = 0<br>🍤与 0 异或时结果不变：a ^ 0 = a</p>
</blockquote>
<p>举个栗子：<br>x = 7<br>y = 12<br>x 的二进制表示为 0111<br>y 的二进制表示为 1100<br>(1)式：x = 0111 ^ 1100 = 1011<br>(2)式：y = 1011 ^ 1100 = 0111<br>(3)式：x = 1011 ^ 0111 = 1100<br>完成x与y的值的交换</p>
<blockquote>
<p>进阶：x ^= y ^= x ^= y</p>
</blockquote>
<h3 id="消去数x的二进制表示下的最右的1"><a href="#消去数x的二进制表示下的最右的1" class="headerlink" title="消去数x的二进制表示下的最右的1"></a>消去数x的二进制表示下的最右的1</h3><blockquote>
<p>x &amp; (x - 1)</p>
</blockquote>
<p>举个栗子：<br>x = 1100<br>x - 1 = 1011<br>x &amp; (x - 1) = 1000<br>消去了最右的1</p>
<h3 id="移位"><a href="#移位" class="headerlink" title="移位"></a>移位</h3><p>一般的语言只支持算术移位，不支持逻辑移位</p>
<h4 id="算术左移-lt-lt"><a href="#算术左移-lt-lt" class="headerlink" title="算术左移&lt;&lt;"></a>算术左移&lt;&lt;</h4><blockquote>
<p>左移<strong>n</strong>位相当于将这个数乘<strong>2^n</strong>(无论正负)<br>把二进制表示下的每一位向左移n位，左边溢出的值丢失，右边补0</p>
</blockquote>
<p>举个栗子：<br>x = 23 的二进制表示为 0001 0111<br>左移一位：<br>x = x &lt;&lt; 1 缩写为：x &lt;&lt;= 1<br>0001 0111 &lt;&lt; 1 = 0010 1110(正数原码反码补码同型)<br>0010 1110 = 46 = 23 * 2</p>
<blockquote>
<p>总结：左高右低，丢弃高位，0补低位</p>
</blockquote>
<h4 id="算术右移-gt-gt"><a href="#算术右移-gt-gt" class="headerlink" title="算术右移&gt;&gt;"></a>算术右移&gt;&gt;</h4><blockquote>
<p>右移<strong>n</strong>位相当于将这个数除以<strong>2^n</strong>(无论正负)<br>把二进制表示下的每一位向右移n位，右边溢出的值丢失<br><strong>左边正数补0，负数补1</strong></p>
</blockquote>
<p>举个栗子：<br>x = -19 的二进制表示为 1001 0011(原码)<br>原码-&gt;反码：1110 1100<br>反码-&gt;补码：1110 1101<br>右移两位：<br>x = x &gt;&gt; 2 缩写为：x &gt;&gt;= 2<br>1110 1101 &gt;&gt; 2 = 1111 1011(补码)<br>补码-&gt;反码：1111 1010<br>反码-&gt;原码：1000 0101<br>1000 0101 = -5</p>
<blockquote>
<p>总结：左高右低，丢弃低位，高位正数补0，负数补1</p>
</blockquote>
<p><strong>注意</strong></p>
<blockquote>
<p>移动的位数超过类型的长度时，编译器会用左移的位数去模类型的最大位数，然后按余数进行移位</p>
</blockquote>
<p>int 占4个字节32位<br>右移4位：4 % 32 = 4<br>右移32位：32 % 32 = 0 也就是不变<br>右移35位，35 % 32 = 3 等价于右移3位</p>
<h2 id="模运算法则"><a href="#模运算法则" class="headerlink" title="模运算法则"></a>模运算法则</h2><p>a，b，m 皆为整型</p>
<blockquote>
<p>加法：(a + b) % m = (a % m + b % m) % m<br>减法：(a - b) % m = (a % m - b % m) % m<br>乘法：(a * b) % m = (a % m * b % m) % m<br>除法：(a / b) % m = (a % ( m * b)) / b<br>证明过程如下，可做了解<br><img src="https://img-blog.csdnimg.cn/a1e0583cc17f4f7baa73ae98d22c7fac.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><h3 id="进制表示"><a href="#进制表示" class="headerlink" title="进制表示"></a>进制表示</h3><p><img src="https://img-blog.csdnimg.cn/add25ac8d4724769bc7863fa9ecf46d5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>先从我们最熟悉的十进制入手吧，其他进制与十进制的转换方法都是一样的，保证能全部记住！</p>
<blockquote>
<p>整型有4种进制形式：<br>1.十进制： 都是以 0-9 这九个数字组成，不能以0开头<br>2.二进制： 由 0 和 1 两个数字组成<br>3.八进制： 由 0-7 数字组成，为了区分与其他进制的数字区别，开头都是以0开始<br>4.十六进制：由 0-9 和 A-F 组成，为了区分于其他数字的区别，开头都是以0x开始</p>
</blockquote>
<h3 id="整数转换"><a href="#整数转换" class="headerlink" title="整数转换"></a>整数转换</h3><p><img src="https://img-blog.csdnimg.cn/e4f0783740d544ee90b23801d89ed726.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h4 id="10进制转2进制"><a href="#10进制转2进制" class="headerlink" title="10进制转2进制"></a>10进制转2进制</h4><p>转换原理：除以2，反向取余数，直到商为0终止</p>
<blockquote>
<p>(1)将某个十进制数除2得到的整数部分保留，作为第二次除2时的被除数，得到的余数依次记下<br>(2)重复上述步骤，直到整数部分为0就结束，将所有得到的余数最终逆序输出，则为该十进制对应的二进制数</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/6e58564f436448fab0332674d7e71b4a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>9(10) = 1001(2)</p>
<h4 id="10进制转8进制"><a href="#10进制转8进制" class="headerlink" title="10进制转8进制"></a>10进制转8进制</h4><p>转换原理：除以8，反向取余数，直到商为0终止</p>
<blockquote>
<p>例如：十进制数796转换成八进制数：<br>将796除8取得第一个余数为4，将除8得到的整数部分99作为第二次的被除数，重复上述步骤，直至最终整数部分为0就结束。将取得的所有余数逆序输出</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/6800824ad10c48fe9b4fccc65df3aa70.png#pic_center" alt="在这里插入图片描述"><br>796(10) = 1434(8)</p>
<h4 id="10进制转16进制"><a href="#10进制转16进制" class="headerlink" title="10进制转16进制"></a>10进制转16进制</h4><p>转换原理：除以16，反向取余数，直到商为0终止</p>
<blockquote>
<p>需要注意的是：十六进制数是由0-9和A-F(或者a-f)组成的，A相当于十进制中的10，B相当于11，依次类推，F相当与15，上述事例中取得的余数12即为十六进制中的c<br><img src="https://img-blog.csdnimg.cn/6046e6a126494b3abc876d4e7f1cc3ef.png#pic_center" alt="在这里插入图片描述"></p>
</blockquote>
<h4 id="2进制、8进制、16进制转10进制"><a href="#2进制、8进制、16进制转10进制" class="headerlink" title="2进制、8进制、16进制转10进制"></a>2进制、8进制、16进制转10进制</h4><p><img src="https://img-blog.csdnimg.cn/5f569ba5374344f88c55e6ff999f31db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h3 id="小数转换"><a href="#小数转换" class="headerlink" title="小数转换"></a>小数转换</h3><p><img src="https://img-blog.csdnimg.cn/389cb08b80c0489ba3da82467ade344c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h4 id="10进制转2进制-1"><a href="#10进制转2进制-1" class="headerlink" title="10进制转2进制"></a>10进制转2进制</h4><p>转换原理：十进制小数转换成二进制小数采用<strong>乘2取整，顺序输出</strong></p>
<blockquote>
<p>例题： 0.68D = ______ B（精确到小数点后5位）<br>如下所示，0.68乘以2，取整，然后再将小数乘以2，取整，直到达到题目要求精度。得到结果：0.10101B.<br>例如：十进制小数0.68转换为二进制数<br>具体步骤：<br>0.68* 2=1.36 –&gt;1<br>0.36* 2=0.72 –&gt;0<br>0.72* 2=1.44 –&gt;1<br>0.44* 2=0.88–&gt;0<br>0.88* 2=1.76 –&gt;1<br>已经达到了题目要求的精度，最后将取出的整数部分顺序输出即可<br>则为：0.68D–&gt;0.10101B</p>
</blockquote>
<h4 id="10进制转8进制-1"><a href="#10进制转8进制-1" class="headerlink" title="10进制转8进制"></a>10进制转8进制</h4><p>转换原理：十进制小数转换成八进制小数采用<strong>乘8取整，顺序输出</strong></p>
<blockquote>
<p>例题： 10.68D = ______ Q（精确到小数点后3位）<br>解析：如下图所示，整数部分除以8取余数，直到无法整除。小数部分0.68乘以8，取整，然后再将小数乘以8，取整，直到达到题目要求精度。得到结果：12.534Q.<br>十进制数10.68转换成八进制数，分为整数部分和小数部分求解<br>步骤：<br>(1)整数部分<br>10/8=1 –&gt;2<br>1/8=0 –&gt;1<br>倒序输出为12<br>(2)小数部分<br>0.68* 8=5.44 –&gt;5<br>0.44* 8=3.52 –&gt;3<br>0.52* 8=4.16 –&gt;4<br>已经达到了题目要求的精度，即可结束<br>则小数部分为：0.68–&gt;0.534<br>因此10.68D –&gt;12.534Q</p>
</blockquote>
<h4 id="10进制转16进制-1"><a href="#10进制转16进制-1" class="headerlink" title="10进制转16进制"></a>10进制转16进制</h4><p>转换原理：十进制小数转换成十六进制小数采用<strong>乘16取整，顺序输出</strong></p>
<blockquote>
<p>例题： 25.68D = ______ H（精确到小数点后3位）<br>整数部分除以16取余数，直到无法整除。小数部分0.68乘以16，取整，然后再将小数乘以16，取整，直到达到题目要求精度。得到结果：19.AE1H.<br>（1）整数部分<br>25/16=1 –&gt;9<br>1/16=0 –&gt;1<br>倒序输出为：19<br>（2）小数部分<br>0.68* 16=10.88 –&gt;A(即十进制中的A)<br>0.88* 16=14.08 –&gt;E<br>0.08* 16=1.28 –&gt;1<br>已经达到了要求的精度，顺序输出为：AE1<br>则：25.68D –&gt;19.AE1H</p>
</blockquote>
<p><strong>总结：小数部分转换原理都是乘进制数取整数部分，再将整数部分顺序输出</strong></p>
<h4 id="2进制转10进制"><a href="#2进制转10进制" class="headerlink" title="2进制转10进制"></a>2进制转10进制</h4><p>转换原理：整数部分按上述进行操作即可，小数部分从小数点后一位指数为-1开始算起，以后依次为-2、-3……<br><img src="https://img-blog.csdnimg.cn/683b9d1e341049c590c3785e290b9b76.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h4 id="8进制转10进制"><a href="#8进制转10进制" class="headerlink" title="8进制转10进制"></a>8进制转10进制</h4><p>转换原理：整数部分操作以及运算不变，小数部分同二进制类似，将2改为8即可</p>
<blockquote>
<p>例如：八进制数72.45转换成十进制数<br>步骤：<br>（1）整数部分：<br>7* 8^1+ 2* 8 ^0=58<br>（2）小数部分<br>4* 8^(-1) +5* 8 ^(-2)=0.5+0.078125=0.578125<br>则为：72.45 –&gt;58.578125</p>
</blockquote>
<p><strong>以上二进制、八进制、十六进制转换为十进制当中的整数部分从右往左指数从0开始递增，小数部分从左往右从-1开始递减，原理都是一样的</strong></p>
<h4 id="16进制转10进制"><a href="#16进制转10进制" class="headerlink" title="16进制转10进制"></a>16进制转10进制</h4><p>转换：整数运算一样，小数部分换成16即可</p>
<blockquote>
<p>例：1A6.3B8=1* 16^2+A* 16 ^1+6* 16 ^0 +3* 16 ^(-1)+B* 16 ^(-2)+8* 16 ^(-3) =419.232422</p>
</blockquote>
<h3 id="二进制转换成八进制数、十六进制数"><a href="#二进制转换成八进制数、十六进制数" class="headerlink" title="二进制转换成八进制数、十六进制数"></a>二进制转换成八进制数、十六进制数</h3><p>1、二进制转换成八进制<br>原理：<strong>三合一</strong>取二进制数中的三位合为八进制数的一位</p>
<p>2、二进制转换成十六进制<br>原理：<strong>四合一</strong>取二进制数中的四位合为十六进制数的一位</p>
<blockquote>
<p>举个栗子：<br>二进制数1010 0100B转换成八进制数为244Q 转换成十六进制数为A4H</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/68744a8bb80643699461fd2b524ea5ea.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/55fed4d4bf5a4d0db712e02116bcfbf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_19,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c4a0fd0b2a104bd28c79e4be52184fe5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h3 id="八进制、十六进制转换成二进制"><a href="#八进制、十六进制转换成二进制" class="headerlink" title="八进制、十六进制转换成二进制"></a>八进制、十六进制转换成二进制</h3><p>1、八进制数转换成二进制<br>原理：八进制数的一位是二进制数的三位</p>
<p>2、十六进制数转换成二进制<br>原理：十六进制数的一位是二进制数的四位<br><img src="https://img-blog.csdnimg.cn/09049b0ef48a4666ab5268f005cbf221.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h3 id="八进制与十六进制之间的转换"><a href="#八进制与十六进制之间的转换" class="headerlink" title="八进制与十六进制之间的转换"></a>八进制与十六进制之间的转换</h3><p>这两者之间的转换可以借助十进制或者二进制完成，可以先将八进制转换成十进制或二进制，再转换成十六进制。通过间接转换来实现</p>
<hr>
<h3 id="❤"><a href="#❤" class="headerlink" title="❤"></a>❤</h3><p>宝贝，以上就是所有常用进制转换，包括整数部分和小数部分，已经是很详细了，我觉得通过例子来理解是最好的方法，记住进制转换的一些原理和规律，换成其他进制也是一样的用。关于进制转换问题是比较基础的，所以一定要掌握哦！<br>希望我的文章对你有所帮助，嘿嘿！</p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/2d017d1b86e24ef8a3a95e250e7c96e5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>C语言学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>不含连续1的非负整数</title>
    <url>/2021/09/11/%E4%B8%8D%E5%90%AB%E8%BF%9E%E7%BB%AD1%E7%9A%84%E9%9D%9E%E8%B4%9F%E6%95%B4%E6%95%B0/</url>
    <content><![CDATA[<p>-字典树-<br>-动态规划-</p>
<p><a href="https://leetcode-cn.com/problems/non-negative-integers-without-consecutive-ones/">传送门</a></p>
<p><img src="https://img-blog.csdnimg.cn/2705ff4982844e37a443dae4dfd2037e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>题解：</p>
<blockquote>
<p>(一) 01字典树</p>
</blockquote>
<p>因为正整数 n 可以取到 10^9 ，所以显然是不可能通过暴力遍历从 1 到 n 的所有正整数来计算答案的。可以感觉到，在暴力遍历的过程中，有非常多的计算是重复的。因此，考虑通过优化暴力遍历来解决这个问题</p>
<p>为了形象地将重复计算的部分找出来，不妨将小于等于 n 的非负整数用 01 字典树的形式表示，其中的每一条从根结点到叶结点的路径都是一个小于等于 n 的非负整数（包含前导 0）</p>
<p>于是，题目可以转化为：在由所有小于等于 n 的非负整数构成的 01 字典树中，找出不包含连续 1 的从根结点到叶结点的路径数量<br><img src="https://img-blog.csdnimg.cn/60892c46bbab481cbb3fb43237358da4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>例如，沿最右边的路径一直往下，得到的就是 (110)2 ，也就是数字 6</p>
<blockquote>
<p>(二) 满二叉树的路径</p>
</blockquote>
<p>题目要求找到所有<strong>其二进制表示不包含连续的1</strong>的数字，也就是说，在 01 字典树的路径上，不能存在连续两个 1。这个问题本可以通过建树 + 搜索的方法解决，但是本题的数据范围为 1 &lt;= n &lt;= 10^9 ，会超时，所以要考虑一种不用穷举的方式来解决本题。</p>
<p>我们以 n = 6 为例，它的左右子树均不为空，所以左子树是一棵满二叉树。</p>
<p>可以发现，对于高度为 t，根节点为 0 的满二叉树中，其左右子树均是高度为 t - 1 的满二叉树，只是根节点分别为 0, 1。 考虑用 dp[k][t] 表示根节点为 k，高度为 t 的满二叉树中，满足题意的路径数量。那么就有：</p>
<p>dp[0][t] = dp[0][t - 1] + dp[1][t - 1]</p>
<p>另外发现，对于高度为 t，根节点为 1 的满二叉树，其右子树的根节点也为 1，那么其右子树上的路径均不满足题意，因为已经有连续两个 1 存在。所以，其路径数量仅仅取决于其左子树：</p>
<p>dp[1][t] = dp[0][t - 1]</p>
<p>将其代入上一个式子，我们便有：</p>
<p>dp[0][t] = dp[0][t - 1] + dp[1][t - 1] = dp[0][t - 1] + dp[0][t - 2]</p>
<p>综上所述，可以将高度为 t，根节点为 0 的满二叉树路径缩小到一维表示<br><img src="https://img-blog.csdnimg.cn/e9a8221b1eb043e8a89adcee1c45774a.png#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p>(三) 非满二叉树的路径数量</p>
</blockquote>
<p><strong>如果该子树有右子树，说明其左子树是满二叉树</strong><br>已经求出了满二叉树中的路径数量，直接考虑其右子树即可。<br>同理，若该子树没有右子树，递归考虑其左子树即可。</p>
<p>由于无法建树搜索，所以在代码中，上述过程需要通过<strong>位运算</strong>来求解</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findIntegers</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 预处理第 i 层满二叉树的路径数量</span></span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">31</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>] = dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="number">31</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i] = dp[i - <span class="number">1</span>] + dp[i - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// pre 记录上一层的根节点值，res 记录最终路径数</span></span><br><span class="line">        <span class="keyword">int</span> pre = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">29</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> val = <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">            <span class="comment">// if 语句判断 当前子树是否有右子树</span></span><br><span class="line">            <span class="keyword">if</span> ((n &amp; val) != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 有右子树</span></span><br><span class="line">                n -= val;</span><br><span class="line">                res += dp[i + <span class="number">1</span>]; <span class="comment">// 先将左子树（满二叉树）的路径加到结果中</span></span><br><span class="line">                <span class="comment">// 处理右子树</span></span><br><span class="line">                <span class="keyword">if</span> (pre == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 上一层为 1，之后要处理的右子树根节点肯定也为 1</span></span><br><span class="line">                    <span class="comment">// 此时连续两个 1，不满足题意，直接退出</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 标记当前根节点为 1</span></span><br><span class="line">                pre = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 无右子树，此时不能保证左子树是否为满二叉树，所以要在下一层再继续判断</span></span><br><span class="line">                pre = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ++res;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>从高到低每局不同位，实际上就是在 01 字典树中从高到低枚举高度。如果 <strong>(n &amp; val) != 0</strong>，说明当前的 n 形成的字典树有右子树，此时左子树为满二叉树，其路径数已经求出，直接递归求解右子树 <strong>(n -= val)</strong> 即可</p>
<p>以 n = 6 为例，当遍历到 i = 2 时，便是判断是否有高度为 2 的子树。此时计算得到的 val = 4 = (100)2，由于 n &amp; val = 100 != 0，说明当前 n = 6 的字典树是有右子树的。此时其左子树高度为3，根节点为 0 的满二叉树，路径数为 dp[3]，其右子树就是图中红框的部分，实际就是 n = 2 的 01 字典树，这可以通过 n = n - val 得到<br><img src="https://img-blog.csdnimg.cn/6751a7888a5b47d28494e0cc830ec052.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>如果当前没有右子树，此时并不能判断左子树是否为满二叉树，要留到下一层继续判断</p>
<blockquote>
<p>结论：长度为n的二进制数字中不含连续1的非负整数个数满足斐波那契数列</p>
</blockquote>
<p>从文法角度给出这个结论的证明：</p>
<p>本题所描述的非负整数，其二进制形式可以由以下文法给出：</p>
<p>S -&gt; 10S | 0S | 0 | 1 | ε</p>
<p>可以看到，如果用字符串S的长度L(S)来构造动态规划状态表的话，可以有初始状态：</p>
<p>dp[0] = 1   // 表示 S -&gt; ε，长度为0的字符串有一个<br>dp[1] = 2   // 表示 S -&gt; 0 | 1，长度为1的字符串有两个</p>
<p>根据两种长度的初始状态，以及递推式 <strong>S -&gt; 10S | 0S</strong> 可以生成所有满足条件的字符串，从而得到状态表的递推式：</p>
<p>dp[n] = dp[n - 2] + dp[n - 1]</p>
<p>该递推式表示长度为n的字符串，都可以通过以下两种方式获得：</p>
<p>在长度为 n-2 的字符串左侧加 10<br>在长度为 n-1 的字符串左侧加 0</p>
<p>可以看到这个递推式就是斐波那契生成式</p>
<hr>
]]></content>
      <categories>
        <category>刷题日记</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
        <tag>字典树</tag>
      </tags>
  </entry>
  <entry>
    <title>单词搜索 II</title>
    <url>/2021/09/16/%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2%20II/</url>
    <content><![CDATA[<p>-字典树-<br>-回溯-</p>
<p><a href="https://leetcode-cn.com/problems/word-search-ii/">传送门</a></p>
<p><img src="https://img-blog.csdnimg.cn/1e016d1cb297439094a97d8f316e7aa5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>题解：</p>
<p>前缀树(字典树)是一种树形数据结构，用于高效地存储和检索字符串数据集中的键。前缀树可以用 O(|S|) 的时间复杂度完成如下操作，其中 |S| 是插入字符串或查询前缀的长度：</p>
<ul>
<li>向前缀树中插入字符串 word</li>
<li>查询前缀串 prefix 是否为已经插入到前缀树中的任意一个字符串 word 的前缀</li>
</ul>
<p>根据题意，需要逐个遍历二维网格中的每一个单元格；然后搜索从该单元格出发的所有路径，找到其中对应 words 中的单词的路径。因为这是一个回溯的过程，所以我们有如下算法：</p>
<ul>
<li>遍历二维网格中的所有单元格</li>
<li>深度优先搜索所有从当前正在遍历的单元格出发的、由相邻且不重复的单元格组成的路径。因为题目要求同一个单元格内的字母在一个单词中不能被重复使用；所以我们在深度优先搜索的过程中，每经过一个单元格，都将该单元格的字母临时修改为特殊字符（例如 #），以避免再次经过该单元格</li>
<li>如果当前路径是 words 中的单词，则将其添加到结果集中。如果当前路径是 words 中任意一个单词的前缀，则继续搜索；反之，如果当前路径不是 words 中任意一个单词的前缀，则剪枝。可以将 words 中的所有字符串先添加到前缀树中，而后用 O(|S|) 的时间复杂度查询当前路径是否为 words 中任意一个单词的前缀</li>
</ul>
<p>在具体实现中，需要注意如下情况：</p>
<ul>
<li>因为同一个单词可能在多个不同的路径中出现，所以需要使用哈希集合对结果集去重</li>
<li>在回溯的过程中，不需要每一步都判断完整的当前路径是否是 words 中任意一个单词的前缀；而是可以记录下路径中每个单元格所对应的前缀树结点，每次只需要判断新增单元格的字母是否是上一个单元格对应前缀树结点的子结点即可</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string word;</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>,TrieNode *&gt; children;</span><br><span class="line">    <span class="built_in">TrieNode</span>() </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;word = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertTrie</span><span class="params">(TrieNode * root,<span class="keyword">const</span> string &amp; word)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TrieNode * node = root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : word)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!node-&gt;children.<span class="built_in">count</span>(c)) </span><br><span class="line">        &#123;</span><br><span class="line">            node-&gt;children[c] = <span class="keyword">new</span> <span class="built_in">TrieNode</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        node = node-&gt;children[c];</span><br><span class="line">    &#125;</span><br><span class="line">    node-&gt;word = word;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> dirs[<span class="number">4</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">-1</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="keyword">int</span> x, <span class="keyword">int</span> y, TrieNode * root, set&lt;string&gt; &amp; res)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch = board[x][y];        </span><br><span class="line">        <span class="keyword">if</span> (!root-&gt;children.<span class="built_in">count</span>(ch)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        root = root-&gt;children[ch];</span><br><span class="line">        <span class="keyword">if</span> (!root-&gt;word.<span class="built_in">empty</span>()) </span><br><span class="line">        &#123;</span><br><span class="line">            res.<span class="built_in">insert</span>(root-&gt;word);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        board[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> nx = x + dirs[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> ny = y + dirs[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (nx &gt;= <span class="number">0</span> &amp;&amp; nx &lt; board.<span class="built_in">size</span>() &amp;&amp; ny &gt;= <span class="number">0</span> &amp;&amp; ny &lt; board[<span class="number">0</span>].<span class="built_in">size</span>()) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[nx][ny] != <span class="string">&#x27;#&#x27;</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">dfs</span>(board, nx, ny, root,res);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        board[x][y] = ch;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">findWords</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt; &amp; board, vector&lt;string&gt; &amp; words)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        TrieNode * root = <span class="keyword">new</span> <span class="built_in">TrieNode</span>();</span><br><span class="line">        set&lt;string&gt; res;</span><br><span class="line">        vector&lt;string&gt; ans;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp; word: words)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">insertTrie</span>(root,word);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; board.<span class="built_in">size</span>(); ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; board[<span class="number">0</span>].<span class="built_in">size</span>(); ++j) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(board, i, j, root, res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp; word: res)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">emplace_back</span>(word);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>优化：删除被匹配的单词</p>
</blockquote>
<p>假设给定一个所有单元格都是 a 的二维字符网格和单词列表 [“a”, “aa”, “aaa”, “aaaa”] 当使用上述代码来找出所有同时在二维网格和单词列表中出现的单词时，需要遍历每一个单元格的所有路径，会找到大量重复的单词</p>
<p>为了缓解这种情况，可以将匹配到的单词从前缀树中移除，来避免重复寻找相同的单词。因为这种方法可以保证每个单词只能被匹配一次；所以也不需要再对结果集去重了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string word;</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, TrieNode *&gt; children;</span><br><span class="line">    <span class="built_in">TrieNode</span>() </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;word = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertTrie</span><span class="params">(TrieNode * root, <span class="keyword">const</span> string &amp; word)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TrieNode * node = root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : word) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!node-&gt;children.<span class="built_in">count</span>(c)) </span><br><span class="line">        &#123;</span><br><span class="line">            node-&gt;children[c] = <span class="keyword">new</span> <span class="built_in">TrieNode</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        node = node-&gt;children[c];</span><br><span class="line">    &#125;</span><br><span class="line">    node-&gt;word = word;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> dirs[<span class="number">4</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">-1</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="keyword">int</span> x, <span class="keyword">int</span> y, TrieNode * root, set&lt;string&gt; &amp; res)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch = board[x][y];        </span><br><span class="line">        <span class="keyword">if</span> (!root-&gt;children.<span class="built_in">count</span>(ch)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        root = root-&gt;children[ch];</span><br><span class="line">        <span class="keyword">if</span> (!root-&gt;word.<span class="built_in">empty</span>()) </span><br><span class="line">        &#123;</span><br><span class="line">            res.<span class="built_in">insert</span>(root-&gt;word);</span><br><span class="line">            root-&gt;word = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        board[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> nx = x + dirs[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> ny = y + dirs[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (nx &gt;= <span class="number">0</span> &amp;&amp; nx &lt; board.<span class="built_in">size</span>() &amp;&amp; ny &gt;= <span class="number">0</span> &amp;&amp; ny &lt; board[<span class="number">0</span>].<span class="built_in">size</span>()) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[nx][ny] != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">dfs</span>(board, nx, ny, root,res);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        board[x][y] = ch;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">findWords</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt; &amp; board, vector&lt;string&gt; &amp; words)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        TrieNode * root = <span class="keyword">new</span> <span class="built_in">TrieNode</span>();</span><br><span class="line">        set&lt;string&gt; res;</span><br><span class="line">        vector&lt;string&gt; ans;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp; word: words) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">insertTrie</span>(root,word);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; board.<span class="built_in">size</span>(); ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; board[<span class="number">0</span>].<span class="built_in">size</span>(); ++j) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(board, i, j, root, res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp; word: res) </span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">emplace_back</span>(word);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>刷题日记</category>
      </categories>
      <tags>
        <tag>字典树</tag>
        <tag>回溯</tag>
      </tags>
  </entry>
  <entry>
    <title>佳仪的笔记(8)</title>
    <url>/2021/09/26/%E4%BD%B3%E4%BB%AA%E7%9A%84%E7%AC%94%E8%AE%B0(8)/</url>
    <content><![CDATA[<h1 id="第八天"><a href="#第八天" class="headerlink" title="第八天"></a>第八天</h1><h2 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h2><blockquote>
<p>while(条件)<br>{<br>…循环体…<br>}</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/80c6f10e286440ec8419e7ac2cc60c72.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h2><blockquote>
<p>for(初始化; 条件表达式; 改变条件的表达式)<br>{<br>…循环体…<br>}</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/7e7af6b0c67446699a17fe87d2bc221b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="do-while-语句"><a href="#do-while-语句" class="headerlink" title="do-while 语句"></a>do-while 语句</h2><blockquote>
<p>do<br>{<br>…循环体…<br>}while(条件);</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/c4ec33023ef24b6c902bb7a2266fb4b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_11,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h3><blockquote>
<p>求出小于n的所有素数</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);  <span class="comment">//从键盘输入一个正整数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;小于%d的素数有：\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++)  <span class="comment">//循环:分别判断 2、3、...、n-1 是否为素数</span></span><br><span class="line">    &#123;</span><br><span class="line">        j = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (j &lt; i &amp;&amp; i % j != <span class="number">0</span>) <span class="comment">//循环:分别判断i是否能被 2 ~ i-1 整除</span></span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> (j == i) <span class="comment">//i是素数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, i);</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (count % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="comment">//控制每一行输出6个素数</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h3><blockquote>
<p>打印三角形</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/3f390bd47ca8420ea9586a0d147ffcf9.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j , n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="comment">//一共有n层</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//打印空格 第i层有 n-i 个空格</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印* 第i层有 2*i-1 个*</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印完一层换行到下一层</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h3><blockquote>
<p>Fibonacci数列：输入整数n，输出数列前n项（本题数列从1开始）</p>
</blockquote>
<p>斐波那契数列（Fibonacci sequence），又称黄金分割数列，因数学家莱昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……在数学上，斐波那契数列以如下被以递推的方法定义：F(0)=0，F(1)=1, F(n)=F(n - 1)+F(n - 2)（n ≥ 2，n ∈ N*）</p>
<blockquote>
<p>利用变量递推</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="comment">//特殊情况 </span></span><br><span class="line">	<span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;1 \n&quot;</span>); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(n == <span class="number">2</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;1 1 \n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(n&gt;=<span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">1</span>,c;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;1 1 &quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(i = <span class="number">3</span>; i &lt;= n; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			c = a;</span><br><span class="line">			a = b;</span><br><span class="line">			b = a + c;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, b);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/cbb923f332f64b38b6bd80297b0a709a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p>利用数组</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i, n, num[<span class="number">20</span>];</span><br><span class="line">	num[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	num[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">3</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		num[i] = num[i - <span class="number">1</span>] + num[i - <span class="number">2</span>];</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">3</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, num[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>递归：求出数列第n项</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(n == <span class="number">1</span> || n == <span class="number">2</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,fib(n));	<span class="comment">//输出数列第n项</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第九天"><a href="#第九天" class="headerlink" title="第九天"></a>第九天</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><blockquote>
<p>元素类型 数组名称[元素个数];</p>
</blockquote>
<ul>
<li>元素类型可以是<strong>任意类型</strong></li>
<li>数组名称必须是<strong>合法标识符</strong></li>
<li>数组元素个数必须是<strong>常量表达式</strong></li>
</ul>
<p>举个栗子：<br>// 包含100个int型元素的数组<br>int score[100];<br>// 包含10个char型元素的数组<br>char name[20];</p>
<blockquote>
<p>访问数组元素的方法：数组名[下标] （0 &lt;= 下标 &lt; 数组大小）</p>
</blockquote>
<h3 id="数组初始化"><a href="#数组初始化" class="headerlink" title="数组初始化"></a>数组初始化</h3><p><img src="https://img-blog.csdnimg.cn/dc0b6d520d464e8ab2dea8469cf1f849.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><h4 id="练习1-1"><a href="#练习1-1" class="headerlink" title="练习1"></a>练习1</h4><blockquote>
<p>判断一个整数n是否再一个整数数组a种出现过，如果找到，输出第一次出现的位置的下标，否则输出-1</p>
</blockquote>
<p>思路：扫描整个整数数组</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">10</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span> n = <span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] == n)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;			</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(i &lt; <span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;pos = %d\n&quot;</span>, i);</span><br><span class="line">	&#125;		</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;pos = -1\n&quot;</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>C语言学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>好好学习天天向上</title>
    <url>/2021/10/14/%E5%A5%BD%E5%A5%BD%E5%AD%A6%E4%B9%A0%E5%A4%A9%E5%A4%A9%E5%90%91%E4%B8%8A/</url>
    <content><![CDATA[<h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="1-分析下面程序，其输出结果为？"><a href="#1-分析下面程序，其输出结果为？" class="headerlink" title="1.分析下面程序，其输出结果为？"></a>1.分析下面程序，其输出结果为？</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>解释：%d代表整型，而a未被赋值，因此输出随机的数</p>
</blockquote>
<h2 id="2-考察赋值运算符"><a href="#2-考察赋值运算符" class="headerlink" title="2.考察赋值运算符"></a>2.考察赋值运算符</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">8</span>;</span><br><span class="line">    x *= x -= x += x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>结果：x=0<br>解释：x+=x:8+8=16<br>x-=x+=:16-16=0<br>最后一步：0*0=0</p>
</blockquote>
<h2 id="3-输入三角形的三边长，求三角形的面积。设输入的三边长a-b-c能构成三角形-（海伦公式）"><a href="#3-输入三角形的三边长，求三角形的面积。设输入的三边长a-b-c能构成三角形-（海伦公式）" class="headerlink" title="3.输入三角形的三边长，求三角形的面积。设输入的三边长a,b,c能构成三角形.（海伦公式）"></a>3.输入三角形的三边长，求三角形的面积。设输入的三边长a,b,c能构成三角形.（海伦公式）</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a, b, c, p, s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    p = <span class="number">1.0</span> / <span class="number">2</span> * (a + b + c);</span><br><span class="line">    s = <span class="built_in">sqrt</span>(p * (p - a) * (p - b) * (p - c));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-输入三个实数，按代数值由小到大次序输出这三个数。"><a href="#4-输入三个实数，按代数值由小到大次序输出这三个数。" class="headerlink" title="4.输入三个实数，按代数值由小到大次序输出这三个数。"></a>4.输入三个实数，按代数值由小到大次序输出这三个数。</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        a ^= b ^= a ^= b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (b &gt; c)</span><br><span class="line">    &#123;</span><br><span class="line">        b ^= c ^= b ^= c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        a ^= b ^= a ^= b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d%d%d\n&quot;</span>, a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>C语言学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>给表达式添加运算符</title>
    <url>/2021/10/16/%E7%BB%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B7%BB%E5%8A%A0%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<p>-回溯-</p>
<p><a href="https://leetcode-cn.com/problems/expression-add-operators/">传送门</a></p>
<p><img src="https://img-blog.csdnimg.cn/9129aa96a35948c0b5a1fba202cb9657.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAb3ZvVG93bw==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>题解：</p>
<blockquote>
<p>回溯</p>
</blockquote>
<p>设字符串 num 的长度为 n，为构建表达式，我们可以往 num 中间的 n−1 个空隙添加 + 号、- 号或 * 号，或者不添加符号</p>
<p>可以用「回溯法」来模拟这个过程。从左向右构建表达式，并实时计算表达式的结果。由于乘法运算优先级高于加法和减法运算，我们还需要保存最后一个连乘串（如2 * 3 * 4）的运算结果</p>
<p>定义递归函数 backtrack(expr, i, res, mul) 其中：</p>
<ul>
<li>expr 为当前构建出的表达式</li>
<li>i 表示当前枚举到了 num 的第 i 个数字</li>
<li>res 为当前表达式的计算结果</li>
<li>mul 为表达式最后一个连乘串的计算结果</li>
</ul>
<p>该递归函数分为两种情况：</p>
<ul>
<li>如果 i = n，说明表达式已经构造完成，此时若有 res = target 则找到了一个可行解，我们将 expr 放入答案数组中，递归结束</li>
<li>如果 i &lt; n，需要枚举当前表达式末尾要添加的符号，以及该符号之后需要截取多少位数字<br>设该符号之后的数字为 val，按符号分类讨论：<br>🍕 若添加 + 号，则 res 增加 val，且 val 单独组成表达式最后一个连乘串<br>🍕 若添加 - 号，则 res 减少 val，且 -val 单独组成表达式最后一个连乘串<br>🍕 若添加 * 号，由于乘法运算优先级高于加法和减法运算，我们需要对 res 撤销之前 mul 的计算结果，并添加新的连乘结果 mul * val，也就是将 res 减少 mul 并增加 mul * val</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector &lt;string&gt; <span class="built_in">addOperators</span>(string num, <span class="keyword">int</span> target)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n = num.<span class="built_in">length</span>();</span><br><span class="line">        vector &lt;string&gt; ans;</span><br><span class="line"></span><br><span class="line">        function&lt;<span class="built_in"><span class="keyword">void</span></span>(string &amp; , <span class="keyword">int</span>, <span class="keyword">long</span>, <span class="keyword">long</span>)&gt; backtrack = [&amp;](string &amp;expr, <span class="keyword">int</span> i, <span class="keyword">long</span> res, <span class="keyword">long</span> mul)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (res == target)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans.<span class="built_in">emplace_back</span>(expr);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> signIndex = expr.<span class="built_in">size</span>();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                expr.<span class="built_in">push_back</span>(<span class="number">0</span>); <span class="comment">// 占位，下面填充符号</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">long</span> val = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 枚举截取的数字长度（取多少位），注意数字可以是单个 0 但不能有前导零</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n &amp;&amp; (j == i || num[i] != <span class="string">&#x27;0&#x27;</span>); ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                val = val * <span class="number">10</span> + num[j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                expr.<span class="built_in">push_back</span>(num[j]);</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                &#123; <span class="comment">// 表达式开头不能添加符号</span></span><br><span class="line">                    <span class="built_in">backtrack</span>(expr, j + <span class="number">1</span>, val, val);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123; <span class="comment">// 枚举符号</span></span><br><span class="line">                    expr[signIndex] = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">                    <span class="built_in">backtrack</span>(expr, j + <span class="number">1</span>, res + val, val);</span><br><span class="line">                    expr[signIndex] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    <span class="built_in">backtrack</span>(expr, j + <span class="number">1</span>, res - val, -val);</span><br><span class="line">                    expr[signIndex] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                    <span class="built_in">backtrack</span>(expr, j + <span class="number">1</span>, res - mul + mul * val, mul * val);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            expr.<span class="built_in">resize</span>(signIndex);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        string expr;</span><br><span class="line">        <span class="built_in">backtrack</span>(expr, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      <categories>
        <category>刷题日记</category>
      </categories>
      <tags>
        <tag>回溯</tag>
      </tags>
  </entry>
  <entry>
    <title>Unit 1</title>
    <url>/2022/02/18/Unit%201/</url>
    <content><![CDATA[<p>🔥<br>1）perform in the role of 扮演…的角色<br>2）By all accounts 总而言之<br>3）perish the thought 没门，甭想了，下辈子吧<br>4）in the / its right / wrong perspective 正确地（不正确地）<br>5）option on sth. …的选择权<br>🔥<br>6）enlarge on / upon 详述，细说<br>7）rake in （尤指轻易地）赚大钱<br>8）rake up 重提旧事（常指不愉快的往事），朝花夕拾<br>9）at any rate 无论如何，不管怎么说，至少<br>10）by a ratio of… 根据…的比率<br>🔥<br>11）It’s usually the case that 通常情况下<br>12）reach an agreement 达成协议；达成共识<br>13）beyond / out of the reach of 无法达到<br>14）within one’s reach 伸手可及<br>15）in really 实际上，事实上<br>🔥<br>16）make something a reality 实现某事<br>17）come to one’s senses 恢复理性，醒悟过来<br>18）in a (或one) sense 从某种意义上说<br>19）make sense 讲得通，言之有理<br>20）in sequence 依次，逐一<br>🔥<br>21）a series of 一系列，一连串<br>22）in series 连续地<br>23）hold together 团结一致；使结合<br>24）go together 相配；恋爱；相互协调<br>25）in token of 作为…的标志（或象征）<br>🔥<br>26）by the same token 由于同样原因，同样地；而且，再说<br>27）cheer up 恢复活力，提起精神<br>28）when the chips are down 在危机关头，在关键时刻<br>29）by (for) choice 出于自己的选择，凭爱好<br>30）prose and verse 散文与韵文<br>🔥<br>31）blank verse 无韵诗<br>32）a sailing vessel 帆船<br>33）cargo vessel 货轮，载货船</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 2</title>
    <url>/2022/02/22/Unit%202/</url>
    <content><![CDATA[<p>🐯<br>1）add in 把…包括在内，把…算作一份子<br>2）add up to 合计达；意味着<br>3）add fuel to the flames 火上浇油<br>4）in addition 另外，此外<br>5）in addition to 除…之外<br>🐯<br>6）address oneself to sth. 把注意力集中于（某问题）<br>7）adequate to / for sth. 适合…的<br>8）be adequate for 对于…是充分的<br>9）be adequate to do 够做…的<br>10）adjust oneself to… 使自己适应…<br>🐯<br>11）adjust to sth. 适应于某事<br>12）apply for admission to a school 申请入学<br>13）gain / obtain admission 获准入场（入学）<br>14）adapt for 改变…以适合于…<br>14）adapt from 由…改编，改写<br>15）adapt to 使适应<br>🐯<br>16）brace (oneself) up [口]（使）打起精神，（使）重新鼓起勇气，（使）振作<br>17）brain drain 人才外流<br>18）brain trust 智囊团，专家顾问组<br>19）beat one’s brains(out) 费劲思考，动脑筋<br>20）rack one’s brain(s) 绞尽脑汁<br>🐯<br>21）brain work 脑力劳动<br>22）branch out 扩大业务范围（或研究领域等）<br>23）branch off 走上岔路<br>24）be branded on one’s memory 被铭记在某人心中<br>25）toss for sth. 掷钱币以决定某事<br>🐯<br>26）keep in touch 保持联系<br>27）out of touch 失去联系<br>28）touch on 关系到，涉及<br>29）touch up 润色，改进<br>30）to treat sb. for sth. 为某人治疗某病<br>🐯<br>31）to treat sb. / sth. with sth. 用某物治疗某人/某病症<br>32）enter into a treaty with 与…缔结条约<br>33）conclude a treaty 订立条约<br>34）vice versa 反之亦然<br>35）cling together 粘在一起；[口]互相忠诚<br>🐯<br>36）close in (on sb. / sth.) （尤指为了进攻）逼近，靠近<br>37）close your mind to sth. 对…拒不考虑（或置之不理、置若罔闻）<br>38）bring to a close 结束<br>39）come out of the closet 公开承认秘密（尤指因耻辱或尴尬而一直保守着的秘密）<br>40）make personal abuse 进行人身攻击<br>🐯<br>41）personal history 履历<br>42）personal effects 私有物<br>43）in form 形式上<br>44）in the form of 以…的形式<br>45）come into a fortune 继承大笔遗产<br>🐯<br>46）tell sb. his fortune 为某人算命<br>47）try one’s fortune 碰运气<br>48）make a fortune 发财<br>49）under the guidance of 在…引导下<br>50）beyond / out of recognition 认不出<br>🐯<br>51）recognize sb. / sth. as… 承认某人/某事物为…<br>52）recommend doing 建议做…<br>53）recommend sb. to do… 建议某人做…<br>54）recommend for 推荐…受（奖）或任（职）<br>55）recover from… 从…恢复<br>🐯<br>56）soak up 吸收<br>57）soak in 渗入<br>58）in detail 详细的</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 3</title>
    <url>/2022/03/03/Unit%203/</url>
    <content><![CDATA[<p>🍿<br>1）sit in / under the shade of tree 坐在树荫下<br>2）hava a shade 刮脸<br>3）in advance 在前面；预先，事先，提前<br>4）in advance of 在…的前面，在…之前<br>5）at an advantage 处于有利地位，以优越的条件<br>🍿<br>6）have (gain, win, get) an (the) advantage over 胜过，优于<br>7）take advantage of 利用（时机、他人的无知、弱点等），占…的便宜<br>8）on one’s advice 按照某人的遗嘱<br>9）take one’s advice 听某人的劝告<br>10）family affairs 家务<br>🍿<br>11）public affairs 公务<br>12）step into the breach （某人不在时）代理某事<br>13）breach of the peace 扰乱治安<br>14）break down 损坏；分解，瓦解<br>15）break in 强行进入，闯入；打断，插嘴<br>🍿<br>16）break out 逃出；突然发生，爆发<br>17）break off 断绝，结束<br>18）break into 闯入<br>19）break through 突破<br>20）break up 中止，结束<br>🍿<br>21）bred and born (或 born and bred) 土生土长的<br>22）combat for 为…而战<br>23）combat with (against) 与…战斗<br>24）be at (by) sb.’s command 服从某人，听某人吩咐<br>25）get command of 控制<br>🍿<br>26）under the command of… 由…指挥<br>27）commend itself to 给…以好印象；被…接受<br>28）arouse comment 引起评论<br>29）favorable comment 正面评价<br>30）in common 共有的，共同的<br>🍿<br>31）out of the common 非同寻常的<br>32）communicate with 与…通信，交流<br>33）communicate sth. to sb. 把…传达给某人<br>34）be determined to do sth. 决心做某事<br>35）develop from… 从…中产生，由…发展成<br>🍿<br>36）develop into （使）发展成，变成<br>37）leave sb. to his own devices 让某人自行应付，对某人不加干涉<br>38）ensure of 对…担保<br>39）ensure against 使安全<br>40）independent of 不受…支配的；与…无关的；不依赖…的<br>🍿<br>41）plea for sth. 恳求，请求<br>42）on the plea of sth. / that… 辩解，托词…<br>43）plead with sb. to do sth. 恳求某人做<br>44）plead to do sth. 恳求做<br>45）plead for sb. 为某人辩护<br>🍿<br>46）plot against sb. / sth. 密谋反对某人（某事）<br>47）plot to do sth. 密谋做某事<br>48）domestic (foreign) policy 国内（对外）政策<br>49）establish a policy 制定方针<br>50）follow / pursue the policy of 奉行…的方针<br>🍿<br>51）political consciousness 政治觉悟<br>52）political power 政权<br>53）political economy 政治经济学<br>54）ponder on / over sth. （长时间地）仔细考虑某事</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 4</title>
    <url>/2022/03/05/Unit%204/</url>
    <content><![CDATA[<p>😉<br>1）in brief 简言之<br>2）the news in brief 简要新闻<br>3）make brief of 简短的，把…快快做完<br>4）to be brief / in short / in a word 简而言之，扼要地说<br>5）in (the) aggregate 总共，作为总体<br>😉<br>6）on aggregate （各次比赛相加的）总分<br>7）agitate for 煽动（鼓吹）要求<br>8）agitate against 鼓吹反对<br>9）in aid of 作为…的帮助；为了…<br>10）aid sb. in sth. 帮助某人做某事<br>😉<br>11）aid sb. with sth. 用某物帮助某人<br>12）take aim 瞄准<br>13）allow of 容许，容许有…的可能<br>14）allow in 允许…进入<br>15）allow for 考虑到，顾及，体谅<br>😉<br>16）beyond (或past, without) compare 无与伦比<br>17）not to be compared to (或 with) 比不上<br>18）compare to（把…）比作，比拟<br>19）compare with 比较；可与…相比；比拟<br>20）by comparsion 比较起来<br>😉<br>21）compete with sb. for sth. 为得到某物与某人竞争<br>22）compete wtih sb. in 在某方面与某人竞争<br>23）in competition with 与…竞争<br>24）enable sb. to do 使某人能做<br>25）enable sth. 使某事成为可能<br>😉<br>26）encounter with 遭遇<br>27）Alongside that 此外<br>28）reach the end of the line 到此为止<br>29）towards the end of… 接近…末尾<br>30）on end 竖起，直立着<br>😉<br>31）make ends meet 量入为出<br>32）end sth. off / up 结束<br>33）end to end 首尾相连地<br>34）at / in the outset 在开始时<br>35）from the outset 从一开始</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 5</title>
    <url>/2022/03/07/Unit%205/</url>
    <content><![CDATA[<p>👍<br>1）put a period to sth. 中止（取缔或结束）某事<br>2）at no period 从未有过<br>3）come to a period 结束<br>4）accommodate to 改变（自己、习惯等）以适应（新的情况），使适合，使符合一致<br>5）accommodate with 向…提供，供给；给予方便<br>👍<br>6）on all accounts （或 on every account）无论如何<br>7）take into account 考虑到，顾及，体谅<br>8）by / from all accounts 据说，根据报道<br>9）foot the bill （对重大事故）赔偿和承担责任<br>10）at birth 在出生时<br>👍<br>11）by birth 论出身<br>12）give birth to 出生，产生<br>13）in charge (of) 主管，负责<br>14）take charge (of) 开始管理，接管<br>15）work like a charm 效应如神地，十分奏效地<br>👍<br>16）chase after 追逐，追求<br>17）chase around (round) 向某方向急奔<br>18）in demand 需要<br>19）make demand on (of) 对…提出要求；需要花费<br>20）Democratic Party 民主党<br>👍<br>21）democratic centralism 民主集中制<br>22）deny oneself 节制；摒弃<br>23）There is no denying the fact that… 无可否认…<br>24）deny sb. sth. 拒绝给予某人某物<br>25）depend on sb. to do sth. 指望某人做某事<br>👍<br>26）It all depends (on)… 全指望…<br>27）dependent on / upon sth. 取决于某事物<br>28）emerge from 出现，露出<br>29）for fear of 唯恐，生怕<br>30）for fear (that / lest) 唯恐，以免<br>👍<br>31）the Federal Government 联邦政府<br>32）Federal Bureau of Investigation (FBI) 联邦调查局<br>33）feed back 反馈，反应<br>34）feed on (或 upon) 以…为事物；以…为能源<br>35）feed up （用吃得好而多地办法）养肥，养壮<br>👍<br>36）be fed up (with) 及其厌倦（或不满）的<br>37）feedback on 关于…的反馈<br>38）take sb . / sth. for granted 认为…是理所当然<br>39）heap up 堆积<br>40）heap sth. on / upon sb. / heap sb. / sth. with sth. 装满，装载<br>👍<br>41）drink to sb.’s health / drink a health to sb. 举杯祝某人健康<br>42）hesitate to do sth. 不愿做某事<br>43）hesitate in doing sth. 犹豫<br>44）hesitate about sth. 对…犹豫不决<br>45）immune response 免疫反应<br>👍<br>46）as likely as not （很）可能</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 6</title>
    <url>/2022/03/12/Unit%206/</url>
    <content><![CDATA[<p>🐶<br>1）derive from sth. 导出，由…来<br>2）beyond descripton 难以形容<br>3）one good turn deserves another 要以德报德<br>4）deserve well / ill of sb. 应该受到某人好的（坏的）待遇<br>5）hava designs on sb. / sth. 对…有不利企图<br>🐶<br>6）by design 故意地<br>7）desire for sth. 希望得到某物<br>8）fling about (around) 乱扔，乱放（某物）；乱花钱；乱施权力<br>9）fling at 朝…投掷…<br>10）fling in 把（某物）扔进去<br>🐶<br>11）grow on 越来越被…喜爱<br>12）grow up 长大，成熟；形成，发展<br>13）hinder from 阻碍，使不能<br>14）drop sb. a hint 暗示某人<br>15）take a hint 接受暗示<br>🐶<br>16）impart to 把…告诉给；把…带给<br>17）impose on sb. 强使…<br>18）impose upon sth. 利用<br>19）impress on / upon / with 盖印；对…有深刻印象<br>20）hava impression on sth. / sb. 对…有深刻印象<br>🐶<br>21）be under the impression that … 以为，认为<br>22）improve on 改进<br>23）improve in 在…方面好转或改善<br>24）on (the) impulse of … 凭…冲动<br>25）put limitation on 对…施加限制<br>🐶<br>26）within a limitation of 在…范围内<br>27）petition sb. for sth. 为某事向某人请愿<br>28）petition sb. to do sth. 请求某人做某事<br>29）by reason of … 由于…<br>30）beyond / out of all reason 毫无道理<br>🐶<br>31）serve sb. right 给某人以应得的惩罚<br>32）serve as 作为，用作<br>33）at sb.’s service 随时帮助某人<br>34）be of service to 有用，有帮助<br>35）set about 开始，着手<br>🐶<br>36）set aside 留出；不顾；拒绝；驳回<br>37）set off 起程，出发；激起，引起<br>38）set up 创立，树立；资助…开业<br>39）set down 放下；写下；记下<br>40）set forth 阐明，陈述<br>🐶<br>41）settle down 定居，过安定的生活<br>42）be severe with 对…严格要求<br>43）out of shape 处于不良的状况<br>44）in shape 处于良好状况<br>45）take shape （开始）成形，形成<br>🐶<br>46）fall to sb.’s share 由某人承担，归某人享有<br>47）go shares 分摊，分担<br>48）give shelter to sb. 庇护某人<br>49）under the shelter of 在…的庇护下，受…的保护</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 7</title>
    <url>/2022/03/15/Unit%207/</url>
    <content><![CDATA[<p>🐔<br>1）choke back 抑制<br>2）choke up 塞满，塞住<br>3）get / be given the chop 被解雇（撤职）；被砍去<br>4）be for the chop 可能遭裁员<br>5）chop and change 反复无常<br>🐔<br>6）under…circumstances 在…情况下<br>7）under no circumstances 在任何情况下都不<br>8）under the circumstances 在目前情况下<br>9）clear away 收拾，清除<br>10）clear off 付清<br>🐔<br>11）clear out 清理掉<br>12）clear up 整理；消除；澄清<br>13）border on / upon 接近，近似<br>14）bother about / with 为…担心，费心<br>15）act for 代理<br>🐔<br>16）act on / upon 按照…行事<br>17）out of action 使失去作用，使失去战斗力<br>18）in action 在运转，在操作<br>19）take action 采取行动<br>20）go (come) into action 开始战斗（行动）<br>🐔<br>21）put…in action 实行，把…付诸实施<br>22）engage in sth. / engage sb. in sth. （使）从事，参加<br>23）fold away 折叠起来收藏<br>24）fold back 对折起来<br>25）follow on 随后而来<br>🐔<br>26）as follows 如下<br>27）follow sth. out 彻底实行<br>28）follow sth. up 追究，追查<br>29）follow through 把…进行到底，完成<br>30）in force 有效，实施中<br>🐔<br>31）come / go into force 生效，实施中<br>32）fore and aft 在船首与船尾<br>33）like grim death 坚定地，不懈地<br>34）grasp at 急欲接受，抓住<br>35）be at grips with 在与…搏斗；在（认真）对付（或处理）<br>🐔<br>36）come / get to grips with 与…搏斗；（认真）对待（或处理）<br>37）give / lose ground 撤退，让步<br>38）hold / stand / keep one’s ground 坚持立场<br>39）shift one’s ground 改变立场<br>40）be / give / have grounds for 有…理由<br>🐔<br>41）on the ground of 因为<br>42）ground sth. on sth. 建立于…基础上<br>43）change guard 换哨<br>44）mount guard 放哨<br>45）relieve guard 接班<br>🐔<br>46）guard against 预防<br>47）be on / off one’s guard （未）戒备着<br>48）on the increase 在增加中<br>49）link…to… 将…和…连起来<br>50）link up 把…串（连）起来<br>🐔<br>51）a memorial service 追悼会；追思礼拜<br>52）to the memory of sb. 以纪念某人，为了纪念某人<br>53）in memory of 纪念<br>54）speak from memory 凭记忆讲述<br>55）mental age 心理年龄<br>🐔<br>56）mental outlook 精神面貌<br>57）each other 彼此，互相<br>58）in other words 换句话说<br>59）on the other hand 另一方面<br>60）other than 不同于</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 8</title>
    <url>/2022/03/20/Unit%208/</url>
    <content><![CDATA[<p>🏇<br>1）in your element 得心应手<br>2）eliminate…from 除去<br>3）in the absence of （某人）不在时，在（某人）背地里<br>4）at home an abroad 国内外<br>5）go abroad 出国<br>🏇<br>6）spread abroad 到处流传<br>7）be absorbed in 专心于<br>8）be absorbed into 吸收；把…并入；同化<br>9）ban…from 禁止…做<br>10）bar from 禁止，不准（某人）做（某事）<br>🏇<br>11）at the bar 受审讯的<br>12）behind bars 在狱中，坐牢<br>13）bare of 没有…的，空的<br>14）lay bare 揭露<br>15）drive a hard bargain 使劲讨价还价<br>🏇<br>16）make (strike) a bargain 达成协议，作成交易<br>17）bargain about / over sth. 就…谈判<br>18）bargain with sb. 与…谈判<br>19）bargain away 以廉价售出<br>20）be capable of doing… 有做…的能力<br>🏇<br>21）Driving one’s point home 为了把事情说清楚<br>22）in case 假使；免得，以防；也许，说不定<br>23）in case of 假使，如果；防备<br>24）in no case 无论如何不，在任何情况下都不，决不<br>25）in the case of 至于…就…来说<br>🏇<br>26）in this (that) case 既然是这（那）样<br>27）catch on 理解，明白<br>28）catch up with 追上，赶上<br>29）catch up on sth. 用额外时间做某事；赶着做<br>30）be caught in sth. 沉湎于…；陷入…<br>🏇<br>31）caution sb. about sth. 警告某人某事<br>32）caution sb. against doing / not to do 警告某人不要做<br>33）stand on (without) ceremony 讲究（不拘）理解<br>34）for certain 确定地<br>35）make certain (that) 弄清楚<br>🏇<br>36）fall / go into a decline 失去力量、影响等<br>37）on the decline 在消减，在衰退<br>38）on the decrease 在减少<br>39）set the (或 a) fashion 树立新榜样，开创新时尚<br>40）after the fashion 模仿<br>🏇<br>41）in favour of 赞同，支持；有利于<br>42）in sb.’s favour 得某人欢心；对某人有利<br>43）sit for sb.’s child 为某人照看小孩<br>44）sit in 静坐示威<br>45）sit in on 列席，旁听<br>🏇<br>46）sketch in 补充说明</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 9</title>
    <url>/2022/03/24/Unit%209/</url>
    <content><![CDATA[<p>🦞<br>1）object against 反对<br>2）object to sth. 反对，讨厌<br>3）oblige by 劳驾，帮忙做…<br>4）oblige to sb. 感谢<br>5）oblige wtih sth. 给（某人）帮忙<br>🦞<br>6）be / come under observation 被观察之中，被看到<br>7）keep sb. under observation 观察某人，监视某人<br>8）observe sb. do sth. 看到某人做某事<br>9）be identical to / with 与…完全相同的<br>10）identification card 身份证<br>🦞<br>11）identify oneself with sb. / sth. 支持某人（某事物）；与…有关联<br>12）keep a journal (of) 记日记，记下来<br>13）break one’s journey 途中在某地作短暂停留<br>14）judge of 对…做出评价<br>15）an error of judgement 错误判断<br>🦞<br>16）reserve judgement 暂不表态<br>17）in one’s judgement 在某人看来<br>18）in justice to 为了对…公平起见<br>19）bring sb. to justice 使（犯人）归案受审<br>20）do justice to sb. / sth. 公平对待某人 / 某事物<br>🦞<br>21）lag behind 落在…后面<br>22）lateral thinking 横向思维<br>23）go to law 诉诸法律<br>24）lay down the law 发号施令<br>25）in the majority 占多数<br>🦞<br>26）make a deal with 达成协议，做成交易<br>27）make for 走向，驶向；有助于，有利于<br>28）make out 辨认；理解；开列<br>29）make up for 弥补<br>30）savage bad manners 粗暴无礼的举止<br>🦞<br>31）save sb. from sth. 拯救；使免受<br>32）save for a rainy day 储蓄以备未来之需；未雨绸缪<br>33）on a large scale 大规模地<br>34）on a small scale 小规模地<br>35）in scale 成比例，相称<br>🦞<br>36）behind the scenes 在后台，在幕后<br>37）come on the scene 到场<br>38）quit the scene 下台；死去<br>39）scenery spot 景点，风景区<br>40）natural scenery 自然风景<br>🦞<br>41）keep pace with sb. / sth. 与…齐步前进（并驾齐驱）<br>42）provide against sth. 预防，防备<br>43）provide sth. for sb. / sb. with sth. 给某人提供某物</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 10</title>
    <url>/2022/03/28/Unit%2010/</url>
    <content><![CDATA[<p>🧨<br>1）abandon oneself to sth. 陷入，沉湎于某事<br>2）abide by 遵守（法律等）；信守（诺言等）；忠于（某人）<br>3）to the best of one’s ability 尽自己最大努力<br>4）keep one’s balance 保持平衡，稳定<br>5）lose one’s balance 失去平衡，慌乱<br>🧨<br>6）the balance of power （国家间的）均势，力量均衡<br>7）the balance of trade 进出口贸易差额<br>8）balance of payments 国际收支差额<br>9）on a basis of 以…为基础<br>10）establish / lay the basis of / for… 建立…的基础<br>🧨<br>11）calculate on / upon 预期，指望<br>12）calculate for 作…打算或安排；预料到<br>13）call at 对…作短暂访问<br>14）call for 需要，要求；规定<br>15）call forth 使出现，使起作用，引起<br>🧨<br>16）call off 取消（某活动），停止做（某事）<br>17）call on / upon 访问（某人），探望（某人）；呼吁，要求<br>18）call up 打电话；召集，征召…入伍；使人想起<br>19）calm down 冷静下来<br>20）out of date 过期的，过时的<br>🧨<br>21）to date 到目前为止<br>22）up to date 时新的，现代的<br>23）a good / great deal (of sth.) 很多，大量<br>24）to make / conclude / close / finalize a deal (with sb.) （与某人）达成一笔交易<br>25）deal in sth. 经营某物；忙于某事物；沉溺于某事物<br>🧨<br>26）deal sth. out 将某物分发给一些人，分发某物<br>27）decide against 决定不做某人<br>28）decide to 决定做某事<br>29）decorate sth. with 用…装饰…<br>30）decorate for 因…而授予（某人）勋章<br>🧨<br>31）economical with the truth 没把实话全说出来<br>32）be in effect 生效，有效，实际上<br>33）be of no effect 没有作用，无效力<br>34）carry / bring into effect 使生效，使起作用，实现<br>35）make an effort 做出努力<br>🧨<br>36）spare no effort 不遗余力，尽力<br>37）in a joint (common) effort 共同努力<br>38）face to face 面对面地<br>39）face up to 大胆面对<br>40）in the face of 面对，在…面前；不顾；即使<br>🧨<br>41）to one’s face 当面，公开<br>42）fade away 消失<br>43）fail to 未能<br>44）if all else fails 实在不行的话（还可以…）<br>45）fall behind 落后<br>🧨<br>46）fall back on 求助于<br>47）fall in with 符合，与…一致<br>48）fall out 争吵，结果是<br>49）fall through 落空，失败<br>50）take a fancy to 喜爱<br>🧨<br>51）take / catch the fancy of 投合…的心意<br>52）gain in sth. 在…（方面）增加<br>53）gain on 赶上；逐渐侵蚀<br>54）gamble in sth. 投机买卖<br>55）gamble on sth. / doing sth. 打赌，碰运气<br>🧨<br>56）in general 通常，大体上<br>57）general knowledge 常识，人所共知的事<br>58）generalize from… 归纳，概括地说<br>59）be in / fall into / get into habit of 养成…的习惯<br>60）fall / get out of the habit of 去掉…习惯<br>🧨<br>61）shift for yourself 独立谋生，自立<br>62）shift off 推卸，逃避；（将…）从…移走<br>63）shoulder to shoulder 并肩；协力<br>64）put one’s shoulder to the wheel 全力以赴<br>65）to take on the shoulder(s) 肩负，承担<br>🧨<br>66）show off 炫耀，卖弄<br>67）show up 显而易见，使显示出；出席，到场</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 11</title>
    <url>/2022/04/01/Unit%2011/</url>
    <content><![CDATA[<p>🤔<br>1）take in 接受，吸收；了解，欺骗<br>2）take…as 把…当作<br>3）take for 把…看成是<br>4）take off 拿走，脱下；起飞<br>5）take on 呈现，雇佣，承担<br>🤔<br>6）take up 占据，占去；开始，从事；拿起，接受<br>7）take to 喜欢；开始从事<br>8）be on the ~受贿<br>9）have a talent for 有…才能<br>10）in bad / poor taste 趣味低级；不得体，不礼貌<br>🤔<br>11）in good taste 文雅的，得体的<br>12）to one’s taste 合某人口味，中意<br>13）have excelllent / high taste in 对…有很高的鉴赏力<br>14）lose one’s temper 发脾气，生气<br>15）keep (control) one’s temper 耐住性子，不使脾气发作<br>🤔<br>16）have / get / run  a temperature 发高烧<br>17）take sb.’s temperature 量体温<br>18）yield (give way) to temptation 受诱惑<br>19）fall into temptation 受诱惑<br>20）tend on / upon 招待，服侍<br>🤔<br>21）tend to sth. 注意，留心<br>22）in terms of 根据，按照；从…方面（来说）<br>23）in the long / short term 从长远 / 眼前的观点看来<br>24）keep terms with sb. 同某人交往<br>25）come to terms with 与…妥协；与…达成协议<br>🤔<br>26）keep track of 跟上…进展，保持与…的联系<br>27）lose track of 不能跟上…的进展，失去与…的联系<br>28）uphold the revolutionary tradition 继承革命传统<br>29）give sb. to understand 使某人领会；通知某人<br>30）make oneself understood 使旁人理解自己的意思<br>🤔<br>31）reach (或 come to arrive at) an understanding with sb. about sth. 与某人对某事达成非正式协议<br>32）be unique to sb. / sth. 是…所特有的<br>33）in vain 徒劳，无效<br>34）for a variety of reasons 由于种种原因<br>35）wage (a) war on / against 对…开战<br>🤔<br>36）live in want 生活困苦<br>37）in want of 需要，缺乏<br>38）for want of 由于缺少…<br>39）by the way 顺便提一下，附带说说，另外<br>40）by way of 经由，通过…的方法<br>🤔<br>41）give way 让步<br>42）in a way 在某种程度上，从某一点来看<br>43）in no way 决不，一点也不<br>44）in the (或 sb.’s) way 挡道的，妨碍的<br>45）in the way of 按照，以…的常规<br>🤔<br>46）make one’s way 前往，前进；发迹，获得成功<br>47）make way 让路，腾出地方<br>48）under way 在进行中，在前进中<br>49）a weak point (side) 弱点<br>50）be weak in pronunciation (hearing) 发音（听觉）差<br>🤔<br>51）wear away 磨损，磨灭；（时间等）消逝，（精力等）衰退；消磨，消耗<br>52）wear away one’s youth in trifles 虚度青春<br>53）wear down 磨薄，磨短；削弱，消耗；使消瘦；使厌烦<br>54）wear off 磨掉；逐渐减弱，逐渐消失<br>55）wear out 用坏，穿破；使筋疲力尽，耗尽<br>🤔<br>56）gain / lose weight 体重增加（减少）<br>57）by weight 按体重计算<br>58）carry weight 重要，有影响<br>59）social welfare 社会福利<br>60）in a whilrl 混乱<br>🤔<br>61）full of youth and vitality 充满青春活力<br>62）a youth of twenty 一个二十岁的青年<br>63）knit one’s brow(s) 皱眉</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 12</title>
    <url>/2022/04/04/Unit%2012/</url>
    <content><![CDATA[<p>🙉<br>1）generation gap 代沟<br>2）give away 泄露；分送<br>3）give back 送还；恢复<br>4）give in 交上；投降，屈服<br>5）give off 放出，释放<br>🙉<br>6）happen on sth. 偶然发现某物<br>7）happen to sb. / sth. 遭到，遇到<br>8）do sb. harm 伤害某人<br>9）mean no harm 没有恶意<br>10）in harmony 和睦（谐）<br>🙉<br>11）in harmony with 和…一致<br>12）be ignorant of / about sth. 对…不知道<br>13）bear sb. no ill will 对某人不存恶意<br>14）imagine doing sth. 想象做某事<br>15）lead (sth.) off 开始（某事）<br>🙉<br>16）lead on to 引起，导致<br>17）take the lead 带头；占主要地位<br>18）play a leading role in sth. 在某事中起主要作用<br>19）at leisure 从容地；有空<br>20）at one’s leisure 在…有空的时候<br>🙉<br>21）levy on sth. 扣押某物（迫使还债）<br>22）in the mass 大体而论，整体上<br>23）in mass 全体，整个地<br>24）be occupied in doing / with sth. 忙于做某事<br>25）occur to sb. 被想到，被想起<br>🙉<br>26）offend against 犯法；违反风俗习惯等<br>27）offend sb. with sth. 激怒（某人）<br>28）offer sb. sth. 向某人提供某物<br>29）offer to do 主动愿意做…<br>30）offer up 奉献<br>🙉<br>31）offer one’s blood 献血<br>32）as an offset to sth. 作为对某事物的补偿<br>33）be parallel with / to 与…平行<br>34）be partial to sb. / sth. 对…有偏心，偏爱（某物）<br>35）a particle of 极少量<br>🙉<br>36）go (或 enter) into particulars 开始陈述<br>37）in particular 特别，尤其<br>38）get / fly into a passion 大怒，大发雷霆<br>39）have a passion for sth. 喜爱<br>40）in quest of sth. 试图找到某事物<br>🙉<br>41）quest for sth. 搜索<br>42）questionnaire on / about sth. 关于…的问卷<br>43）time span 时间跨度<br>44）ahead of schedule 提前<br>45）behind schedule 落后于计划，晚点<br>🙉<br>46）on schedule 按时间表，及时，准时<br>47）complete (fulfil) a scheme 完成计划<br>48）carry out a scheme 实施计划<br>49）adopt a scheme 采纳一项计划</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 13</title>
    <url>/2022/04/14/Unit%2013/</url>
    <content><![CDATA[<p>🥺<br>1）embedded hyperlink 嵌入式超链接<br>2）embody in 体现，表现<br>3）in embryo 在胚胎阶段；在萌芽时期；尚未成熟<br>4）as if / though 好像<br>5）at first thought 乍一想<br>🥺<br>6）at the thought of 一想起…（就）<br>7）on second thoughts 经重新考虑，一转念<br>8）threaten sb. with sth. 用…来威胁某人<br>9）threaten to do sth. 威胁要做某事<br>10）Nothing ventured, nothing gained 不入虎穴，焉得虎子<br>🥺<br>11）lose one’s wits 丧失理智<br>12）at one’s wits’ end 智穷计尽<br>13）out of one’s wits 不知所措<br>14）incident to （正式用语）随带的<br>15）inclined your head 点头同意<br>🥺<br>16）incline to / towards sth. （身体或思想上）有某种倾向<br>17）academic study 学术研究<br>18）academic year （大学的）学年<br>19）academic dicussion 学术讨论<br>20）hava access to 有机会接近…<br>🥺<br>21）give sb. access to 提供某人接近…的机会<br>22）begin with 以…开始<br>23）to begin with 首先，第一（用于句首，用以陈述理由）<br>24）from beginning to end 从头到尾，至始至终<br>25）from the beginning 从一开始<br>🥺<br>26）at the beginnig 最初，起初<br>27）in / on behalf of 为了…的利益；代表…<br>28）behave oneself 检点（自己）的行为；表现得…<br>29）beyond belief 难以置信的，不可思议的<br>30）in the belief that （引起状语）相信<br>🥺<br>31）to one’s belief 据…看来<br>32）be beneficial to sb. / sth. 对…有益；利于…<br>33）be of benefit to 对…有好处<br>34）for the benefit of… 为了…（的好处或利益）<br>35）benefit by / from 从…中受益<br>🥺<br>36）by chance 偶然，碰巧<br>37）take one’s chance 碰运气<br>38）change over 改变制度和地位<br>39）change with… 与…对调<br>40）in character 与自身特性相符，如所预料<br>🥺<br>41）out of character 与自身特性不相符，非所预料<br>42）defend sb. from harm 保护某人不受伤害<br>43）by degrees 逐渐地，一点一点地<br>44）to a…degree 到…程度<br>45）cash on delivery 货到付款<br>🥺<br>46）take delivery (of sth.) 收到某物<br>47）figure out 理解<br>48）figure on 料想<br>49）figure in 出现<br>50）be firm with sb. 对某人严格<br>🥺<br>51）first up 第一，首先<br>52）first off 首先<br>53）first and last 从各方面看，完全地</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 14</title>
    <url>/2022/04/15/Unit%2014/</url>
    <content><![CDATA[<p>😶‍🌫️<br>1）patch sth. up 修补；拼凑成；暂时解决（分歧、争吵、困难等）<br>2）not a patch on 比不上…<br>3）strike a bad patch 倒霉，遭受不幸<br>4）pay back 偿还，回报<br>5）pay off 还清（债）<br>😶‍🌫️<br>6）be peculiar to sb. / sth. 是…所独特的<br>7）peer at sth. / sb. 仔细看<br>8）as per sth. 按照，依据<br>9）as per usual 照常，按惯例<br>10）in perfect silence 鸦雀无声<br>😶‍🌫️<br>11）Parctice makes perfect. 熟能生巧<br>12）by rail 乘火车，用火车<br>13）at random 胡乱地，随便地，任意地<br>14）range from…to… 在…到…间波动 / 变化<br>15）close ranks 团结起来（面对困难）<br>😶‍🌫️<br>16）of (the) first rank 头等的，一流的<br>17）rank among / with… 属…之列<br>18）mean sth. to sb. 对某人重要，对某人有价值<br>19）mean well by sb. 对某人怀有好意<br>20）by all means 无论如何，必定<br>😶‍🌫️<br>21）by means of 借助于，用<br>22）by no means 决不<br>23）come / go into operation 开始运转，生效<br>24）put / bring into operation 始投入生产，使处于实施状态<br>25）operational costs / expenditure 营运成本<br>😶‍🌫️<br>26）operational research 运筹学；操作性研究<br>27）ask the opinion of sb. 征询某人意见<br>28）be of the opinion that… 认为…<br>29）give one’s opinion on 就…发表意见<br>30）a matter of opinion 看法不同的问题<br>😶‍🌫️<br>31）in one’s opinion 依某人看<br>32）as opposed to 完全不同，截然相反<br>33）be opposed to 反对（反抗）某事<br>34）be opposite to 与…相反<br>35）laugh sb. / sth. to scorn 嘲笑某人（某事）<br>😶‍🌫️<br>36）a sense of security 安全感<br>37）In security 安全状态；安全地<br>38）see about sth. 处理某事<br>39）see after 照应，照顾<br>40）see sb. about sth. 会晤某人<br>😶‍🌫️<br>41）see into 调查，了解<br>42）seek after (for) 寻找，探索，追求<br>43）seek out 搜寻出<br>44）urge sth. (upon / on sb.) 大力推荐；竭力主张<br>45）urge sb. to do / into doing sth. 怂恿某人干某事<br>😶‍🌫️<br>46）be urgent with sb. for sth. 硬要某人做某事<br>47）no (或 little, small, what) wonder 难怪，怪不得<br>48）be worth doing sth. 值得做某事<br>49）be worthy of / to do 值得（做）….<br>50）be worthy to be done 值得被做<br>😶‍🌫️<br>51）write off 取消，注销，勾销</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 15</title>
    <url>/2022/04/20/Unit%2015/</url>
    <content><![CDATA[<p>🐇<br>1）constant temperature 恒温<br>2）fulfil oneself 完全实现自己的抱负<br>3）associate oneself with 参加到…中去；对…公开表示赞同（或支持）<br>4）among others 其中，尤其<br>5）among ourselves 在我们之间，私下<br>🐇<br>6）in amount 总之；总计<br>7）amount to 总计；（意义、效果、价值）等于…<br>8）be amused at (by, with) 以…为乐<br>9）in a good (bad) mood 心情（不）好<br>10）in the mood 兴致勃勃<br>🐇<br>11）in stock 有现货的，有库存的<br>12）out of stock 无现货的，脱销的<br>13）get into / hit / strike one’s stride 开始走上轨道<br>14）make great strides 突飞猛进<br>15）strike home 击中要害；取得意想的成果<br>🐇<br>16）strike out 划掉；搞出，做成<br>17）go / be on strike 举行罢工<br>18）in principle 原则上，基本上<br>19）on principle 按照原则<br>20）strick to / live up to one’s principle 坚守原则<br>🐇<br>21）bear / give / show evidence of… 有…迹象的<br>22）entertain to 款待<br>23）entertain with 用…使（人）快乐</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 16</title>
    <url>/2022/04/21/Unit%2016/</url>
    <content><![CDATA[<p>🤪<br>1）stand by 支持，帮助，站在…一边；袖手旁观<br>2）stand for 代表，拥护<br>3）stand out 突出，显眼<br>4）stand up 站起来，耐用<br>5）stand up for 支持；坚持<br>🤪<br>6）stand up to 勇敢地面对，经得起<br>7）at the very start 一开始<br>8）start from scratch 白手起家<br>9）from start to finish 自始至终<br>10）to start with 首先<br>🤪<br>11）be started by / at sth. 为某事所惊<br>12）be starved of 缺乏…<br>13）make a statement 陈述，声明<br>14）steering wheel 方向盘<br>15）from stem to stem 从船头到船尾<br>🤪<br>16）stem from sth. （不用于进行时）起源于，根源是<br>17）step by step 逐步地；稳步地<br>18）in step 同步，合拍<br>19）step in 干预，介入<br>20）step up 站出来；自告奋勇<br>🤪<br>21）out of step 步调不一致，不协调<br>22）answer to 反应<br>23）in answer to 作为对…的回答（或响应，反击等）<br>24）apart from 除…之外（别无）；若无，要不是；除…外（尚有）<br>25）assert oneself 坚持自己的权利（或意见）<br>🤪<br>26）be condemned to death 被判死刑<br>27）condemn sb. for sth. 因某事而谴责某人；告某人有罪<br>28）condemn sb. to do sth. 判某人做某事<br>29）in mint condition 无污损的，完美的<br>30）on condition (that)… 在…条件下，倘若…<br>🤪<br>31）get hold of 抓住，掌握，得到，获得<br>32）hold on 抓住；继续；坚持；等待；停止<br>33）hold on to 紧紧抓住（尤指坚持不放）；控制，克制<br>34）hold out 提出，提供；坚持不屈；持续<br>35）hold up 举起；承受住，支撑；使停顿<br>🤪<br>36）go into a huddle (with sb.) 举行秘密会议<br>37）huddle up 使蜷缩一团<br>38）a nasty look 凶相<br>39）be nasty to sb. 跟某人闹别扭<br>40）national anthem 国歌<br>🤪<br>41）national income 国民收入<br>42）national minority 少数民族<br>43）national costume 民族服装<br>44）native language 本族语<br>45）native charm / ability 天赋之魅力<br>🤪<br>46）native customs 土著的风俗（才能）<br>47）by nature 天生，就其本性而言<br>48）in nature 本质上</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 17</title>
    <url>/2022/04/24/Unit%2017/</url>
    <content><![CDATA[<p>🙂<br>1）stick with sb. / sth. 紧跟，不离开（某人，以便得到帮助）；持续，坚持<br>2）stick to 坚持；信守，忠于<br>3）stick around 逗留，停留<br>4）stick at 停止，踌躇，迟疑于<br>5）stir up 惹起（麻烦）<br>🙂<br>6）stir oneself 奋发，振作<br>7）inform sb. of sth. / that… 报告，告诉<br>8）inform against / on sb. 告发某人，告密<br>9）appropriate for / to 对…适合的<br>10）be apt at doing sth. 善于做某事<br>🙂<br>11）connect up 连接；接通电源<br>12）connect with 联系，（使）连接<br>13）in connection with / to… 与…有关<br>14）in this (that) connection 关于这（那）一点<br>15）dismiss for… 因…而解雇<br>🙂<br>16）a nervous disorder 神经错乱，神经失调<br>17）put sth. on display 展出某物<br>18）distribute to / among 分配<br>19）distribute over 散布<br>20）distract from 扰乱<br>🙂<br>21）examine into 调查，查问<br>22）examine in 在…方面测试（某人）<br>23）model yourself on sb. 仿效；以某人为榜样<br>24）a moderate climate 温和的气候<br>25）be in moderate views 持稳健见解<br>🙂<br>26）hava a preference for 偏爱，特别喜欢<br>27）give (a) preference to sb. / sth. 给…以优惠<br>28）in preference to sb. / sth. 胜于，优先于<br>29）hava a prejudice against 对…抱有偏见<br>30）preliminary to 在…之前<br>🙂<br>31）put a premium on sb. / sth. 使…受到重视<br>32）cast reflections on 说…的坏话<br>33）cast a reflection 提出看法<br>34）a few reflections 几点想法<br>35）rejoice at / over 为…高兴<br>🙂<br>36）rejoice in 以（某称号）为荣…<br>37）relate with… 将…与…联系起来<br>38）in / with relation to 关于，有关<br>39）bear no / little / some relation to 在数目、数量或大小上完全不 / 不太 / 部分相符<br>40）be relevant to 与…有关联的<br>🙂<br>41）overseas students 外国到本国留学的学生<br>42）students overseas 本国去别国留学的学生</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 18</title>
    <url>/2022/04/25/Unit%2018/</url>
    <content><![CDATA[<p>😎<br>1）in confidence 私下的（地），作为秘密的（地）<br>2）take sb. into one’s confidence 向某人吐露内心地秘密等<br>3）in view of 鉴于…<br>4）with a view to 以…为目的；着眼于<br>5）fall in with sb.’s views on 在…与某人观点一致<br>😎<br>6）by virtue of 借凭；由于<br>7）appeal against 上诉<br>8）appeal for 呼吁，恳求<br>9）appeal to 向…呼吁；向…请求<br>10）keep up appearances 支撑门面；虚饰外表<br>😎<br>11）make one’s appearance 登台<br>12）put in an appearance 露（一下）面<br>13）apply to sb. for sth. 向…申请<br>14）apply to 对…适用（规则等）<br>15）apply oneself to 专心致力于…<br>😎<br>16）discriminate between two cases 区分两件事<br>17）(be) in disgrace (with sb.) 很不讨人喜欢<br>18）in essence 本质上，实质上；基本上<br>19）of the essence 极其重要的，必不可少的<br>20）be in a misery from 受…之苦<br>😎<br>21）live in misery ans want 生活在贫穷困苦之中<br>22）be / get mixed up in / with sth. 混合，混淆，搞糊涂<br>23）mix sth. / sb. up (with sth. / sb.) 完全混合；使弄不清楚；不能分辨<br>24）be under the necessity of 不得已而…<br>25）of necessity 必然，必定<br>😎<br>26）negotiate with sb. about / over sth. 与某人商议<br>27）negotiate sb. into doing sth. 通过谈判使某人做…<br>28）power station 发电站<br>29）power politics 强权政治<br>30）come into power （开始）执政，当权；上台<br>😎<br>31）have sb. in one’s power 控制住某人，能摆布某人<br>32）power structure （社会、组织等的）权力机构<br>33）for all practical purposes 实际上，事实上<br>34）practical activities 实践活动<br>35）bring / carry into practice 实施，实行<br>😎<br>36）in practice 在实践中，实际上<br>37）out of practice 久不练习，生疏<br>38）take precautions 采取预防措施<br>39）take precaution against 预防<br>40）lay / put / place stress on 强调，把重点放在…上<br>😎<br>41）at a stretch 连续地，一口气地</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 19</title>
    <url>/2022/04/28/Unit%2019/</url>
    <content><![CDATA[<p>😛<br>1）in honor of 为纪念，向…表示敬意<br>2）on one’s honor 以名誉担保<br>3）on the horizon （事件）即将来临的<br>4）initiate sb. into sth. 准许，传授<br>5）act / do sth. on one’s own initiative 主动地做某事<br>😛<br>6）have the initiative 处于主动的地位<br>7）write out a prescription 开处方<br>8）fill (make) up a prescription 配药<br>9）make one’s presence felt 使别人感觉自己重要<br>10）in the presence of someone / in someone’s presence 在某人面前<br>😛<br>11）at present 目前，现在<br>12）press for 急切要求某事物，逼迫，敦促<br>13）press sth. on sb. 把…强加于人<br>14）put / exert pressure on / upon 对…施加压力<br>15）under pressure 被迫<br>😛<br>16）prevent sb. from doing sth. 阻止某人做某事<br>17）be (或 become, fall) prey to sth. 被…捕食<br>18）(be) on the straight 老实做人<br>19）talk straight 直言不讳<br>20）put things straight 整顿局面<br>😛<br>21）arise from / out of 由…发生<br>22）speak volumes for 充分整明或显示<br>23）in consequence (as a consequence) 因此，结果<br>24）in consequence of… 由于…缘故<br>25）take the consequences (of…) 承担（…的）后果<br>😛<br>26）all things considered 从各方面考虑起来<br>27）consume with 被某种强烈感情所吞噬；因…而憔悴；心中充满<br>28）consume away 消耗，耗去；吃光；烧光<br>29）dispute with / against sb. 与某人争论<br>30）dispute about 就…争论<br>😛<br>31）exclude from 拒绝，把…排除于…之外</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 20</title>
    <url>/2022/04/29/Unit%2020/</url>
    <content><![CDATA[<p>💡<br>1）in a position to / in no position to 能够 / 不能够<br>2）be positive about sth. 对…很确信<br>3）be possessed of 具有，拥有<br>4）in possession of 所有…，拥有…<br>5）come into / get possession of 获得，得到<br>💡<br>6）take a dim view of… 对…持怀疑态度<br>7）be amazed at 因…而大感惊讶<br>8）build up 积累，逐步建立，增进<br>9）get down to business 认真着手办事<br>10）have no business to do sth. / doing sth. 无权做某事<br>💡<br>11）mean business 态度认真<br>12）talk business 谈生意<br>13）on business 因公<br>14）out of business 停业的，破产的<br>15）have no conception of 完全不懂，不明白<br>💡<br>16）be concerned in sth. 对某事负有责任<br>17）a foregone conclusion 可预料的必然结果<br>18）jump to conclusions （未经全面考虑）匆匆作出结论<br>19）in conclusion 最后，总之<br>20）be in conference with sb. 和某人协商<br>💡<br>21）be in a mess （某事、物）一团糟<br>22）get into a / the mess 陷入困境<br>23）leave a message 留言<br>24）get the message 领悟，理解<br>25）military academy 军事学院<br>💡<br>26）keep one’s mind on sth. 专心于做某事<br>27）bear / keep in mind 记住<br>28）make up one’s mind 下决心<br>29）reduce to 削减至<br>30）refer to 参考；涉及<br>💡<br>31）refer to…as 把…当作<br>32）in / with reference  to 关于<br>33）without reference to 不考虑…，不管…<br>34）be subject sb. / sth. to sth. 使…经历或遭受<br>35）be subject to 受…支配；以…为条件<br>💡<br>36）on the spur of the moment 一时冲动之下<br>37）spy out the land 摸清情况<br>38）spy sth. out 暗中查明<br>39）be staffed with 配备有…<br>40）(go) on the stage 当演员，登台演出</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 21</title>
    <url>/2022/04/30/Unit%2021/</url>
    <content><![CDATA[<p>✍️<br>1）it remains to be seem 情况仍未明，要看怎样发展<br>2）remedy for 对…的治疗，补救<br>3）remember as 记得（某人或某物）是（原来的样子）<br>4）remember in 在遗嘱中把财产留给某人<br>5）render into 翻译<br>✍️<br>6）render a service to 帮助…<br>7）render up 移交或交出某物；屈服；放弃<br>8）contempt of court 藐视法庭<br>9）in contempt of 对…不屑一顾<br>10）fall into contempt 蒙受耻辱，失尽面子<br>✍️<br>11）contend with sth. （不得不）处理问题，对付困境<br>12）in context 在上下文中，连贯起来<br>13）in this context 在这一点上，在这方面<br>14）out of context 脱离上下文，割裂地，断章取义地<br>15）by contraries 与预期的相反<br>✍️<br>16）on the contrary 正相反<br>17）quite the contrary 恰恰相反<br>18）to the contrary （意思）相反的（地）<br>19）by contrast 相比之下<br>20）in contrast with (或 to) 与…形成对比<br>✍️<br>21）divide sth. up / out 划分，分开<br>22）divide into 分成<br>23）divide by 除以<br>24）pay dividends 产生效益，得到好处<br>25）exert oneself 努力，尽力<br>✍️<br>26）moral standards 道德标准<br>27）the moral sense 是非感<br>28）prior to 在…以前；先于，优先于<br>29）have priority over / to 优先考虑<br>30）give priority to 给予…优先权<br>✍️<br>31）according to priority 按照资格（或时间的）次序，依次<br>32）individual privacy 个人隐私<br>33）enjoy privileges 享受特权<br>34）subordinate body (staff) 下属机构（人员）<br>35）in substance 本质上，基本上，大体上，实际上<br>✍️<br>36）annoy…by doing sth. 因…而打扰别人<br>37）be annoyed at / by sth. 因某事而生气<br>38）anchor down sth. / sth. down 把…固定住</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
  <entry>
    <title>Unit 22</title>
    <url>/2022/05/02/Unit%2022/</url>
    <content><![CDATA[<p>🤞<br>1）rescue from… 从…救出<br>2）to the (或 sb.’s) rescue 为援救或帮助（某人）<br>3）resent doing sth. 怨恨做某事<br>4）refresh one’s memory 使某人想起<br>5）in the region of 大约<br>🤞<br>6）the lower regions 地狱<br>7）rules ans regulations 琐碎而烦人的种种规定<br>8）replace with / by 以…代替…<br>9）reply for 代表…回答<br>10）reply to 回答，回复<br>🤞<br>11）report progress 报告目前的发展<br>12）report back 采访，报导<br>13）report on / upon 向…报告<br>14）live up to one’s reputation 名副其实<br>15）have a reputation 以…而闻名<br>🤞<br>16）at sb.’s request 应某人之要求<br>17）by request (of) 依照…的要求<br>18）on request 应…的要求<br>19）request sb. to do sth. 要求某人做某事<br>20）require of 对…的要求<br>🤞<br>21）meet (answer, satisfy) someone’s requirements 符合（达到满足）…的要求<br>22）assimilate to (或 with) 使相似；把…比作<br>23）assist (sb.) in / with sth. 帮助，协助<br>24）research assistant 研究助理<br>25）make an assumption 假设<br>🤞<br>26）on the assumption that… 基于…的假设<br>27）contribute to 有助于，促成<br>28）out of control 失去控制<br>29）under control 被控制住<br>30）have control over 能控制<br>🤞<br>31）dominate over 统治，控制<br>32）double up / over / across 弯曲或对折<br>33）double back 折回<br>34）in doubt 怀疑<br>35）without a doubt 毫无疑问<br>🤞<br>36）beyond all doubt 不容置疑<br>37）mount a probe of… 对…进行调查<br>38）in the process of 在…过程中<br>39）expect to do sth. 期望干…<br>40）expect sth. of / from sb. 指望某人…<br>🤞<br>41）be expecting (a baby) 怀孕<br>42）beyond expectation 出乎意料<br>43）contrary to expectation(s) 与期望相反<br>44）insure against… 保险，投保</p>
<hr>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
  </entry>
</search>
